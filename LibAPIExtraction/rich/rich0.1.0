
----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/escape.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/text.py----------------------------------------
A:rich.text.null_style->Style()
A:rich.text.current_style->style.Style.combine(stack)
A:rich.text.self._text_str->''.join(self._text)
A:rich.text.offset->len(self)
A:rich.text.text_length->len(text)
A:rich.text.lines->self.text.split(separator)
A:rich.text.rich_text->RichText('0123456789012345')
A:rich.text.console->Console()
rich.text.RichText(self,text:str='',align:Literal['left','center','right']='left')
rich.text.RichText.__console_render__(self,console:Console,options:ConsoleOptions)->Iterable[StyledText]
rich.text.RichText.__init__(self,text:str='',align:Literal['left','center','right']='left')
rich.text.RichText.__len__(self)->int
rich.text.RichText.__repr__(self)->str
rich.text.RichText.__str__(self)->str
rich.text.RichText.append(self,text:str,style:str=None)->None
rich.text.RichText.split(self,separator='\n')->List[RichText]
rich.text.RichText.stylize(self,start:int,end:int,style:str)->None
rich.text.RichText.text(self)->str
rich.text.TextSpan(NamedTuple)
rich.text.TextSpan.adjust_offset(self,offset:int)->TextSpan
rich.text.TextSpan.slice_text(self,text:str)->str


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/colors.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/style.py----------------------------------------
A:rich.style.self._color->color.Color.parse(self.color)
A:rich.style.self._back->color.Color.parse(self.back)
A:rich.style.words->iter(style_definition.split())
A:rich.style.word->next(words, '')
A:rich.style.style->Style.parse('bold')
A:rich.style.RESET_STYLE->Style.reset()
rich.style.Style
rich.style.Style.__post_init__(self)->None
rich.style.Style.__repr__(self)
rich.style.Style.__str__(self)->str
rich.style.Style.apply(self,style:Optional[Style])->Style
rich.style.Style.combine(self,styles:Iterable[Style])->Style
rich.style.Style.copy(self)->Style
rich.style.Style.parse(cls,style_definition:str)->Style
rich.style.Style.render(self,text:str='',*,current_style:Style=None,reset=False)->str
rich.style.Style.reset(cls)->Style
rich.style.Style.test(self,text:Optional[str]=None)->None


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/console.py----------------------------------------
A:rich.console.default_style->style.Style.reset()
A:rich.console.self._styles->ChainMap(styles)
A:rich.console.self.current_style->self.current_style.apply(style)
A:rich.console.style->style.Style.parse(style)
A:rich.console.options->ConsoleOptions(max_width=self.width)
A:rich.console.render->console_object.__console_render__(self, options)
A:rich.console.styled_text->StyledText(str(console_object), None)
A:rich.console.text->self._render_buffer()
A:rich.console.rendered->''.join(output)
A:rich.console.(width, height)->shutil.get_terminal_size()
A:rich.console.(width, _)->shutil.get_terminal_size()
A:rich.console.console->Console()
rich.console.Console(self,styles:Dict[str,Style]=DEFAULT_STYLES,file:IO=None)
rich.console.Console.__enter__(self)->Console
rich.console.Console.__exit__(self,exc_type,exc_value,traceback)->None
rich.console.Console.__init__(self,styles:Dict[str,Style]=DEFAULT_STYLES,file:IO=None)
rich.console.Console._check_buffer(self)->None
rich.console.Console._enter_buffer(self)->None
rich.console.Console._exit_buffer(self)->None
rich.console.Console._render_buffer(self)->str
rich.console.Console.get_style(self,name:str)->Optional[Style]
rich.console.Console.pop_style(self)->Style
rich.console.Console.print(self,*objects:Union[ConsoleRenderable,SupportsStr])->None
rich.console.Console.push_style(self,style:Union[str,Style])->None
rich.console.Console.size(self)->ConsoleDimensions
rich.console.Console.style(self,style:Union[str,Style])->StyleContext
rich.console.Console.width(self)->int
rich.console.Console.write(self,text:str,style:str=None)->None
rich.console.ConsoleDimensions(NamedTuple)
rich.console.ConsoleOptions
rich.console.ConsoleRenderable(Protocol)
rich.console.ConsoleRenderable.__console_render__(self,console:Console,options:ConsoleOptions)->Iterable[Union[SupportsConsole, StyledText]]
rich.console.StyleContext(self,console:Console,style:Style)
rich.console.StyleContext.__enter__(self)->Console
rich.console.StyleContext.__exit__(self,exc_type,exc_value,traceback)->None
rich.console.StyleContext.__init__(self,console:Console,style:Style)
rich.console.StyledText(NamedTuple)
rich.console.StyledText.__repr__(self)->str
rich.console.SupportsConsole(Protocol)
rich.console.SupportsConsole.__console__(self)->StyledText
rich.console.SupportsStr(Protocol)
rich.console.SupportsStr.__str__(self)->str


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/color.py----------------------------------------
A:rich.color.RE_COLOR->re.compile('^\n\\#([0-9a-f]{6})$|\n([0-9]{1,3})$|\nrgb\\(([\\d\\s,]+)\\)$\n', re.VERBOSE)
A:rich.color.attrs->self.get_ansi_codes(foreground=True)
A:rich.color.color->Color.parse('#339a2e')
A:rich.color.standard_color_number->STANDARD_COLORS_NAMES.get(color)
A:rich.color.color_match->re.compile('^\n\\#([0-9a-f]{6})$|\n([0-9]{1,3})$|\nrgb\\(([\\d\\s,]+)\\)$\n', re.VERBOSE).match(color)
A:rich.color.(color_24, color_8, color_rgb)->re.compile('^\n\\#([0-9a-f]{6})$|\n([0-9]{1,3})$|\nrgb\\(([\\d\\s,]+)\\)$\n', re.VERBOSE).match(color).groups()
A:rich.color.triplet->ColorTriplet(*EIGHT_BIT_COLORS[self.number])
A:rich.color.components->color_rgb.split(',')
A:rich.color.distance->_sqrt((red2 - red1) * (red2 - red1) + (green2 - green1) * (green2 - green1) + (blue2 - blue1) * (blue2 - blue1))
A:rich.color.(min_index, _min_color)->min(enumerate(pallette), key=lambda pallette_color: get_color_distance(pallette_color[1]))
A:rich.color.ansi_blue->round(blue / 255.0 * 5.0)
A:rich.color.color_number->self._match_color(triplet, STANDARD_PALLETTE)
rich.color.Color(NamedTuple)
rich.color.Color.__repr__(self)->str
rich.color.Color.__str__(self)
rich.color.Color._match_color(cls,color:ColorTriplet,pallette:Iterable[Tuple[int,int,int]])->int
rich.color.Color.downgrade(self,system:ColorSystem)->Color
rich.color.Color.get_ansi_codes(self,foreground:bool=True)->List[str]
rich.color.Color.parse(cls,color:str)->Optional[Color]
rich.color.Color.system(self)->ColorSystem
rich.color.ColorParseError(Exception)
rich.color.ColorSystem(IntEnum)
rich.color.ColorTriplet(NamedTuple)
rich.color.ColorType(IntEnum)


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/_version.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/markdown.py----------------------------------------
A:rich.markdown.parser->Parser()
A:rich.markdown.nodes->Parser().parse(self.markup).walker()
A:rich.markdown.style->Console().get_style(f'markdown.{node_type}')
A:rich.markdown.console->Console()
A:rich.markdown.md->Markdown(markup)
rich.markdown.Markdown(self,markup)
rich.markdown.Markdown.__console_render__(self,console:Console,options:ConsoleOptions)->Iterable[StyledText]
rich.markdown.Markdown.__init__(self,markup)
rich.markdown.MarkdownHeading
rich.markdown.MarkdownHeading.__console__(self)->str


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/errors.py----------------------------------------
rich.errors.ConsoleError(Exception)
rich.errors.MissingStyle(StyleError)
rich.errors.StyleError(Exception)
rich.errors.StyleStackError(ConsoleError)
rich.errors.StyleSyntaxError(ConsoleError)


----------------------------------------/dataset/nuaa/anaconda3/envs/rich0.1.0/lib/python3.9/site-packages/rich/default_styles.py----------------------------------------

