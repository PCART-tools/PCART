
----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/structures.py----------------------------------------
A:requests.structures.self._lower_keys->dict(((k.lower(), k) for k in list(self.keys())))
requests.structures.CaseInsensitiveDict(dict)
requests.structures.CaseInsensitiveDict.__contains__(self,key)
requests.structures.CaseInsensitiveDict.__delitem__(self,key)
requests.structures.CaseInsensitiveDict.__getitem__(self,key)
requests.structures.CaseInsensitiveDict.__setitem__(self,key,value)
requests.structures.CaseInsensitiveDict._clear_lower_keys(self)
requests.structures.CaseInsensitiveDict.get(self,key,default=None)
requests.structures.CaseInsensitiveDict.lower_keys(self)
requests.structures.LookupDict(self,name=None)
requests.structures.LookupDict.__getitem__(self,key)
requests.structures.LookupDict.__init__(self,name=None)
requests.structures.LookupDict.__repr__(self)
requests.structures.LookupDict.get(self,key,default=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/defaults.py----------------------------------------
A:requests.defaults.defaults->dict()


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/_oauth.py----------------------------------------
A:requests._oauth.directory->os.path.dirname(__file__)
A:requests._oauth.path->os.path.join(directory, 'packages')


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/utils.py----------------------------------------
A:requests.utils.CERTIFI_BUNDLE_PATH->certs.where()
A:requests.utils.d->d.items().items()
A:requests.utils.ri->urlparse(url)
A:requests.utils._netrc->netrc(netrc_path).authenticators(host)
A:requests.utils.name->getattr(obj, 'name', None)
A:requests.utils.value->unquote_header_value(value[1:-1])
A:requests.utils.item->unquote_header_value(item[1:-1])
A:requests.utils.(name, value)->unquote_header_value(item[1:-1]).split('=', 1)
A:requests.utils.headers->list(headers.items())
A:requests.utils.cj2->cookiejar_from_dict(cookie_dict)
A:requests.utils.charset_re->re.compile('<meta.*?charset=["\\\']*(.+?)["\\\'>]', flags=re.I)
A:requests.utils.content_type->list(headers.items()).get('content-type')
A:requests.utils.(content_type, params)->cgi.parse_header(content_type)
A:requests.utils.decoder->codecs.getincrementaldecoder(r.encoding)(errors='replace')
A:requests.utils.rv->zlib.decompressobj(zlib_mode).decompress(chunk)
A:requests.utils.encoding->get_encoding_from_headers(r.headers)
A:requests.utils.dec->zlib.decompressobj(zlib_mode)
A:requests.utils.buf->zlib.decompressobj(zlib_mode).decompress(bytes())
A:requests.utils.gen->stream_decompress(gen, mode='deflate')
A:requests.utils.UNRESERVED_SET->frozenset('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' + '0123456789-._~')
A:requests.utils.parts->uri.split('%')
A:requests.utils.c->chr(int(h, 16))
A:requests.utils._implementation->platform.python_implementation()
A:requests.utils._implementation_version->platform.python_version()
A:requests.utils.(url, params)->val.split(';', 1)
A:requests.utils.link['url']->url.strip('<> \'"')
A:requests.utils.(key, value)->param.split('=')
A:requests.utils.link[key.strip(replace_chars)]->unquote_header_value(value[1:-1]).strip(replace_chars)
requests.utils.add_dict_to_cookiejar(cj,cookie_dict)
requests.utils.default_user_agent()
requests.utils.dict_from_cookiejar(cj)
requests.utils.dict_to_sequence(d)
requests.utils.from_key_val_list(value)
requests.utils.get_encoding_from_headers(headers)
requests.utils.get_encodings_from_content(content)
requests.utils.get_environ_proxies()
requests.utils.get_netrc_auth(url)
requests.utils.get_os_ca_bundle_path()
requests.utils.get_unicode_from_response(r)
requests.utils.guess_filename(obj)
requests.utils.header_expand(headers)
requests.utils.iter_slices(string,slice_length)
requests.utils.parse_dict_header(value)
requests.utils.parse_header_links(value)
requests.utils.parse_list_header(value)
requests.utils.requote_uri(uri)
requests.utils.stream_decode_response_unicode(iterator,r)
requests.utils.stream_decompress(iterator,mode='gzip')
requests.utils.stream_untransfer(gen,resp)
requests.utils.to_key_val_list(value)
requests.utils.unquote_header_value(value,is_filename=False)
requests.utils.unquote_unreserved(uri)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/sessions.py----------------------------------------
A:requests.sessions.default_kwarg->from_key_val_list(default_kwarg)
A:requests.sessions.local_kwarg->from_key_val_list(local_kwarg)
A:requests.sessions.kwargs->from_key_val_list(default_kwarg).copy()
A:requests.sessions.self.headers->from_key_val_list(headers or [])
A:requests.sessions.self.proxies->from_key_val_list(proxies or [])
A:requests.sessions.self.hooks->from_key_val_list(hooks or {})
A:requests.sessions.self.params->from_key_val_list(params or [])
A:requests.sessions.self.config->from_key_val_list(config or {})
A:requests.sessions.self.cookies->cookiejar_from_dict(cookies)
A:requests.sessions.self.poolmanager->PoolManager(num_pools=self.config.get('pool_connections'), maxsize=self.config.get('pool_maxsize'))
A:requests.sessions.method->str(method).upper()
A:requests.sessions.headers[k]->header_expand(v)
A:requests.sessions.args->dispatch_hook('args', args['hooks'], args)
A:requests.sessions.args['cookies']->cookiejar_from_dict(cookies)
A:requests.sessions.session_val->getattr(self, attr, None)
A:requests.sessions.local_val->dispatch_hook('args', args['hooks'], args).get(attr)
A:requests.sessions.args[attr]->merge_kwargs(local_val, session_val)
A:requests.sessions.r->Request(**args)
requests.Session(self,headers=None,cookies=None,auth=None,timeout=None,proxies=None,hooks=None,params=None,config=None,prefetch=True,verify=True,cert=None)
requests.Session.__enter__(self)
requests.Session.__exit__(self,*args)
requests.Session.__getstate__(self)
requests.Session.__repr__(self)
requests.Session.__setstate__(self,state)
requests.Session.close(self)
requests.Session.delete(self,url,**kwargs)
requests.Session.get(self,url,**kwargs)
requests.Session.head(self,url,**kwargs)
requests.Session.init_poolmanager(self)
requests.Session.options(self,url,**kwargs)
requests.Session.patch(self,url,data=None,**kwargs)
requests.Session.post(self,url,data=None,**kwargs)
requests.Session.put(self,url,data=None,**kwargs)
requests.Session.request(self,method,url,params=None,data=None,headers=None,cookies=None,files=None,auth=None,timeout=None,allow_redirects=True,proxies=None,hooks=None,return_response=True,config=None,prefetch=None,verify=None,cert=None)
requests.session(**kwargs)
requests.sessions.Session(self,headers=None,cookies=None,auth=None,timeout=None,proxies=None,hooks=None,params=None,config=None,prefetch=True,verify=True,cert=None)
requests.sessions.Session.__enter__(self)
requests.sessions.Session.__exit__(self,*args)
requests.sessions.Session.__getstate__(self)
requests.sessions.Session.__init__(self,headers=None,cookies=None,auth=None,timeout=None,proxies=None,hooks=None,params=None,config=None,prefetch=True,verify=True,cert=None)
requests.sessions.Session.__repr__(self)
requests.sessions.Session.__setstate__(self,state)
requests.sessions.Session.close(self)
requests.sessions.Session.delete(self,url,**kwargs)
requests.sessions.Session.get(self,url,**kwargs)
requests.sessions.Session.head(self,url,**kwargs)
requests.sessions.Session.init_poolmanager(self)
requests.sessions.Session.options(self,url,**kwargs)
requests.sessions.Session.patch(self,url,data=None,**kwargs)
requests.sessions.Session.post(self,url,data=None,**kwargs)
requests.sessions.Session.put(self,url,data=None,**kwargs)
requests.sessions.Session.request(self,method,url,params=None,data=None,headers=None,cookies=None,files=None,auth=None,timeout=None,allow_redirects=True,proxies=None,hooks=None,return_response=True,config=None,prefetch=None,verify=None,cert=None)
requests.sessions.merge_kwargs(local_kwarg,default_kwarg)
requests.sessions.session(**kwargs)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/exceptions.py----------------------------------------
requests.ConnectionError(RequestException)
requests.HTTPError(RequestException)
requests.RequestException(RuntimeError)
requests.Timeout(RequestException)
requests.TooManyRedirects(RequestException)
requests.URLRequired(RequestException)
requests.exceptions.ConnectionError(RequestException)
requests.exceptions.HTTPError(RequestException)
requests.exceptions.InvalidSchema(RequestException,ValueError)
requests.exceptions.InvalidURL(RequestException,ValueError)
requests.exceptions.MissingSchema(RequestException,ValueError)
requests.exceptions.RequestException(RuntimeError)
requests.exceptions.SSLError(ConnectionError)
requests.exceptions.Timeout(RequestException)
requests.exceptions.TooManyRedirects(RequestException)
requests.exceptions.URLRequired(RequestException)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/api.py----------------------------------------
A:requests.api.session->sessions.session()
requests.api.delete(url,**kwargs)
requests.api.get(url,**kwargs)
requests.api.head(url,**kwargs)
requests.api.options(url,**kwargs)
requests.api.patch(url,data=None,**kwargs)
requests.api.post(url,data=None,**kwargs)
requests.api.put(url,data=None,**kwargs)
requests.api.request(method,url,**kwargs)
requests.delete(url,**kwargs)
requests.get(url,**kwargs)
requests.head(url,**kwargs)
requests.options(url,**kwargs)
requests.patch(url,data=None,**kwargs)
requests.post(url,data=None,**kwargs)
requests.put(url,data=None,**kwargs)
requests.request(method,url,**kwargs)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/models.py----------------------------------------
A:requests.models.self.config->dict(config or [])
A:requests.models.self.url->str(url)
A:requests.models.self.headers->CaseInsensitiveDict()
A:requests.models.self.proxies->get_environ_proxies()
A:requests.models.self.response->dispatch_hook('response', self.hooks, self.response)
A:requests.models.self.cookies->cookiejar_from_dict(cookies)
A:requests.models.headers->CaseInsensitiveDict()
A:requests.models.response->Response()
A:requests.models.response.status_code->getattr(resp, 'status', None)
A:requests.models.response.headers->CaseInsensitiveDict(getattr(resp, 'headers', {}))
A:requests.models.response.encoding->get_encoding_from_headers(response.headers)
A:requests.models.response.error->getattr(resp, 'error', None)
A:requests.models.response.url->self.full_url.decode('utf-8')
A:requests.models.r->dispatch_hook('post_request', self.hooks, self)
A:requests.models.parsed_rurl->urlparse(r.url)
A:requests.models.url->requote_uri(url)
A:requests.models.request->Request(url=url, headers=headers, files=files, method=method, params=self.session.params, auth=self.auth, cookies=self.cookies, redirect=True, data=data, config=self.config, timeout=self.timeout, _poolmanager=self._poolmanager, proxies=self.proxies, verify=self.verify, session=self.session, cert=self.cert, prefetch=self.prefetch)
A:requests.models.fields->to_key_val_list(self.data)
A:requests.models.files->to_key_val_list(files)
A:requests.models.fp->BytesIO(fp)
A:requests.models.(body, content_type)->self._encode_files(self.files)
A:requests.models.(scheme, netloc, path, params, query, fragment)->urlparse(url)
A:requests.models.netloc->netloc.encode('utf-8').encode('utf-8')
A:requests.models.scheme->scheme.encode('utf-8').encode('utf-8')
A:requests.models.path->path.encode('utf-8').encode('utf-8')
A:requests.models.params->params.encode('utf-8').encode('utf-8')
A:requests.models.query->query.encode('utf-8').encode('utf-8')
A:requests.models.fragment->fragment.encode('utf-8').encode('utf-8')
A:requests.models.enc_params->self._encode_params(self.params)
A:requests.models.p->urlsplit(self.full_url)
A:requests.models.self.auth->HTTPBasicAuth(*self.auth)
A:requests.models.body->self._encode_params(self.data)
A:requests.models._p->urlparse(url)
A:requests.models.no_proxy->filter(lambda x: x.strip(), self.proxies.get('no', '').split(','))
A:requests.models.proxy->self.proxies.get(_p.scheme)
A:requests.models.conn->packages.urllib3.connectionpool.connection_from_url(url)
A:requests.models._proxy->urlparse(proxy)
A:requests.models.(auth, url)->urlparse(proxy).netloc.split('@', 1)
A:requests.models.self.proxy_auth->HTTPProxyAuth(*auth.split(':', 1))
A:requests.models.cert_loc->os.environ.get('CURL_CA_BUNDLE')
A:requests.models.cookie_header->get_cookie_header(self.cookies, self)
A:requests.models.chunk->self.raw.read(chunk_size)
A:requests.models.gen->stream_decode_response_unicode(gen, self)
A:requests.models.lines->self.raw.read(chunk_size).splitlines()
A:requests.models.pending->self.raw.read(chunk_size).splitlines().pop()
A:requests.models.content->str(self.content, errors='replace')
A:requests.models.links->parse_header_links(header)
A:requests.models.http_error->HTTPError(http_error_msg)
requests.Request(self,url=None,headers=dict(),files=None,method=None,data=dict(),params=dict(),auth=None,cookies=None,timeout=None,redirect=False,allow_redirects=False,proxies=None,hooks=None,config=None,prefetch=True,_poolmanager=None,verify=None,session=None,cert=None)
requests.Request.__repr__(self)
requests.Request._build_response(self,resp)
requests.Request._encode_files(self,files)
requests.Request._encode_params(data)
requests.Request.deregister_hook(self,event,hook)
requests.Request.full_url(self)
requests.Request.path_url(self)
requests.Request.register_hook(self,event,hook)
requests.Request.send(self,anyway=False,prefetch=None)
requests.Response(self)
requests.Response.__bool__(self)
requests.Response.__nonzero__(self)
requests.Response.__repr__(self)
requests.Response.content(self)
requests.Response.iter_content(self,chunk_size=1,decode_unicode=False)
requests.Response.iter_lines(self,chunk_size=10*1024,decode_unicode=None)
requests.Response.json(self)
requests.Response.links(self)
requests.Response.ok(self)
requests.Response.raise_for_status(self,allow_redirects=True)
requests.Response.reason(self)
requests.Response.text(self)
requests.models.Request(self,url=None,headers=dict(),files=None,method=None,data=dict(),params=dict(),auth=None,cookies=None,timeout=None,redirect=False,allow_redirects=False,proxies=None,hooks=None,config=None,prefetch=True,_poolmanager=None,verify=None,session=None,cert=None)
requests.models.Request.__init__(self,url=None,headers=dict(),files=None,method=None,data=dict(),params=dict(),auth=None,cookies=None,timeout=None,redirect=False,allow_redirects=False,proxies=None,hooks=None,config=None,prefetch=True,_poolmanager=None,verify=None,session=None,cert=None)
requests.models.Request.__repr__(self)
requests.models.Request._build_response(self,resp)
requests.models.Request._encode_files(self,files)
requests.models.Request._encode_params(data)
requests.models.Request.deregister_hook(self,event,hook)
requests.models.Request.full_url(self)
requests.models.Request.path_url(self)
requests.models.Request.register_hook(self,event,hook)
requests.models.Request.send(self,anyway=False,prefetch=None)
requests.models.Response(self)
requests.models.Response.__bool__(self)
requests.models.Response.__init__(self)
requests.models.Response.__nonzero__(self)
requests.models.Response.__repr__(self)
requests.models.Response.content(self)
requests.models.Response.iter_content(self,chunk_size=1,decode_unicode=False)
requests.models.Response.iter_lines(self,chunk_size=10*1024,decode_unicode=None)
requests.models.Response.json(self)
requests.models.Response.links(self)
requests.models.Response.ok(self)
requests.models.Response.raise_for_status(self,allow_redirects=True)
requests.models.Response.reason(self)
requests.models.Response.text(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/cookies.py----------------------------------------
A:requests.cookies.req->MockRequest(request)
A:requests.cookies.res->MockResponse(response._original_response.msg)
A:requests.cookies.r->MockRequest(request)
A:requests.cookies.c->create_cookie(name=morsel.key, value=morsel.value, version=morsel['version'] or 0, port=None, port_specified=False, domain=morsel['domain'], domain_specified=bool(morsel['domain']), domain_initial_dot=morsel['domain'].startswith('.'), path=morsel['path'], path_specified=bool(morsel['path']), secure=bool(morsel['secure']), expires=morsel['max-age'] or morsel['expires'], discard=False, comment=morsel['comment'], comment_url=bool(morsel['comment']), rest={'HttpOnly': morsel['httponly']}, rfc2109=False)
A:requests.cookies.state->self.__dict__.copy()
A:requests.cookies.self._cookies_lock->dummy_threading.RLock()
A:requests.cookies.result->dict(version=0, name=name, value=value, port=None, domain='', path='/', secure=False, expires=None, discard=True, comment=None, comment_url=None, rest={'HttpOnly': None}, rfc2109=False)
A:requests.cookies.result['port_specified']->bool(result['port'])
A:requests.cookies.result['domain_specified']->bool(result['domain'])
A:requests.cookies.result['domain_initial_dot']->result['domain'].startswith('.')
A:requests.cookies.result['path_specified']->bool(result['path'])
A:requests.cookies.cookiejar->RequestsCookieJar()
requests.cookies.CookieConflictError(RuntimeError)
requests.cookies.MockRequest(self,request)
requests.cookies.MockRequest.__init__(self,request)
requests.cookies.MockRequest.add_header(self,key,val)
requests.cookies.MockRequest.add_unredirected_header(self,name,value)
requests.cookies.MockRequest.get_full_url(self)
requests.cookies.MockRequest.get_header(self,name,default=None)
requests.cookies.MockRequest.get_host(self)
requests.cookies.MockRequest.get_new_headers(self)
requests.cookies.MockRequest.get_origin_req_host(self)
requests.cookies.MockRequest.get_type(self)
requests.cookies.MockRequest.has_header(self,name)
requests.cookies.MockRequest.is_unverifiable(self)
requests.cookies.MockRequest.unverifiable(self)
requests.cookies.MockResponse(self,headers)
requests.cookies.MockResponse.__init__(self,headers)
requests.cookies.MockResponse.getheaders(self,name)
requests.cookies.MockResponse.info(self)
requests.cookies.RequestsCookieJar(cookielib.CookieJar,collections.MutableMapping)
requests.cookies.RequestsCookieJar.__delitem__(self,name)
requests.cookies.RequestsCookieJar.__getitem__(self,name)
requests.cookies.RequestsCookieJar.__getstate__(self)
requests.cookies.RequestsCookieJar.__setitem__(self,name,value)
requests.cookies.RequestsCookieJar.__setstate__(self,state)
requests.cookies.RequestsCookieJar._find(self,name,domain=None,path=None)
requests.cookies.RequestsCookieJar._find_no_duplicates(self,name,domain=None,path=None)
requests.cookies.RequestsCookieJar.copy(self)
requests.cookies.RequestsCookieJar.get(self,name,default=None,domain=None,path=None)
requests.cookies.RequestsCookieJar.get_dict(self,domain=None,path=None)
requests.cookies.RequestsCookieJar.items(self)
requests.cookies.RequestsCookieJar.keys(self)
requests.cookies.RequestsCookieJar.list_domains(self)
requests.cookies.RequestsCookieJar.list_paths(self)
requests.cookies.RequestsCookieJar.multiple_domains(self)
requests.cookies.RequestsCookieJar.set(self,name,value,**kwargs)
requests.cookies.RequestsCookieJar.values(self)
requests.cookies.cookiejar_from_dict(cookie_dict,cookiejar=None)
requests.cookies.create_cookie(name,value,**kwargs)
requests.cookies.extract_cookies_to_jar(jar,request,response)
requests.cookies.get_cookie_header(jar,request)
requests.cookies.morsel_to_cookie(morsel)
requests.cookies.remove_cookie_by_name(cookiejar,name,domain=None,path=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/auth.py----------------------------------------
A:requests.auth.log->logging.getLogger(__name__)
A:requests.auth.signature_type->signature_type.upper().upper()
A:requests.auth.self.client->Client(client_key, client_secret, resource_owner_key, resource_owner_secret, callback_uri, signature_method, signature_type, rsa_key, verifier)
A:requests.auth.contenttype->r.headers.get('Content-Type', '').split(';')[0].lower()
A:requests.auth.decoded_body->extract_params(r.data)
A:requests.auth.(r.url, r.headers, _)->self.client.sign(unicode(r.full_url), unicode(r.method), None, r.headers)
A:requests.auth.(r.url, r.headers, r.data)->self.client.sign(unicode(r.full_url), unicode(r.method), r.data, r.headers)
A:requests.auth.u_header->unicode('Authorization')
A:requests.auth.auth_header->self.generate_request_header(r)
A:requests.auth.r.headers['Authorization']->self.build_digest_header(r.method, r.url)
A:requests.auth.r.headers['Proxy-Authorization']->_basic_auth_str(self.username, self.password)
A:requests.auth.qop->self.chal.get('qop')
A:requests.auth.algorithm->algorithm.upper().upper()
A:requests.auth.opaque->self.chal.get('opaque', None)
A:requests.auth.x->x.encode('utf-8').encode('utf-8')
A:requests.auth.p_parsed->urlparse(url)
A:requests.auth.s->str(self.nonce_count).encode('utf-8')
A:requests.auth.respdig->KD(hash_utf8(A1), '%s:%s' % (nonce, hash_utf8(A2)))
A:requests.auth.num_401_calls->r.request.hooks['response'].count(self.handle_401)
A:requests.auth.s_auth->r.headers.get('www-authenticate', '')
A:requests.auth.self.chal->parse_dict_header(s_auth.replace('Digest ', ''))
A:requests.auth.r.request.headers['Authorization']->self.build_digest_header(r.request.method, r.request.url)
A:requests.auth.authreq->r.headers.get('www-authenticate', None)
A:requests.auth.rx->re.compile('(?:.*,)*\\s*Negotiate\\s*([^,]*),?', re.I)
A:requests.auth.mo->re.compile('(?:.*,)*\\s*Negotiate\\s*([^,]*),?', re.I).search(authreq)
A:requests.auth.(tail, _, head)->host.rpartition(':')
A:requests.auth.(result, self.context)->kerberos.authGSSClientInit('HTTP@%s' % domain)
A:requests.auth.result->kerberos.authGSSClientStep(self.context, _negotiate_value(r))
A:requests.auth.response->kerberos.authGSSClientResponse(self.context)
A:requests.auth._r->self.handle_other(r)
requests.auth.AuthBase(self,r)
requests.auth.AuthBase.__call__(self,r)
requests.auth.HTTPBasicAuth(self,username,password)
requests.auth.HTTPBasicAuth.__init__(self,username,password)
requests.auth.HTTPDigestAuth(self,username,password)
requests.auth.HTTPDigestAuth.__init__(self,username,password)
requests.auth.HTTPDigestAuth.build_digest_header(self,method,url)
requests.auth.HTTPDigestAuth.handle_401(self,r)
requests.auth.HTTPKerberosAuth(self,require_mutual_auth=True)
requests.auth.HTTPKerberosAuth.__init__(self,require_mutual_auth=True)
requests.auth.HTTPKerberosAuth.authenticate_server(self,r)
requests.auth.HTTPKerberosAuth.authenticate_user(self,r)
requests.auth.HTTPKerberosAuth.deregister(self,r)
requests.auth.HTTPKerberosAuth.generate_request_header(self,r)
requests.auth.HTTPKerberosAuth.handle_401(self,r)
requests.auth.HTTPKerberosAuth.handle_other(self,r)
requests.auth.HTTPKerberosAuth.handle_response(self,r)
requests.auth.HTTPProxyAuth(self,r)
requests.auth.HTTPProxyAuth.__call__(self,r)
requests.auth.OAuth1(self,client_key,client_secret=None,resource_owner_key=None,resource_owner_secret=None,callback_uri=None,signature_method=SIGNATURE_HMAC,signature_type=SIGNATURE_TYPE_AUTH_HEADER,rsa_key=None,verifier=None)
requests.auth.OAuth1.__init__(self,client_key,client_secret=None,resource_owner_key=None,resource_owner_secret=None,callback_uri=None,signature_method=SIGNATURE_HMAC,signature_type=SIGNATURE_TYPE_AUTH_HEADER,rsa_key=None,verifier=None)
requests.auth._basic_auth_str(username,password)
requests.auth._negotiate_value(r)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/compat.py----------------------------------------
A:requests.compat._ver->sys.version.lower()


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/status_codes.py----------------------------------------
A:requests.status_codes.codes->LookupDict(name='status_codes')


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/certs.py----------------------------------------
requests.certs.where()


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/safe_mode.py----------------------------------------
A:requests.safe_mode.r->Response()
A:requests.safe_mode.r.raw->HTTPResponse()
requests.safe_mode.catch_exceptions_if_in_safe_mode(function)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/async.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/hooks.py----------------------------------------
A:requests.hooks.hooks->hooks.get(key).get(key)
A:requests.hooks._hook_data->hook(hook_data)
requests.hooks.dispatch_hook(key,hooks,hook_data)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/__init__.py----------------------------------------
A:requests.packages.urllib3.__init__.logger->logging.getLogger(__name__)
A:requests.packages.urllib3.__init__.handler->logging.StreamHandler()
requests.packages.urllib3.__init__.add_stderr_logger(level=logging.DEBUG)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/exceptions.py----------------------------------------
requests.packages.urllib3.HTTPError(Exception)
requests.packages.urllib3.TimeoutError(PoolError)
requests.packages.urllib3.exceptions.ClosedPoolError(PoolError)
requests.packages.urllib3.exceptions.DecodeError(HTTPError)
requests.packages.urllib3.exceptions.EmptyPoolError(PoolError)
requests.packages.urllib3.exceptions.HTTPError(Exception)
requests.packages.urllib3.exceptions.HostChangedError(self,pool,url,retries=3)
requests.packages.urllib3.exceptions.HostChangedError.__init__(self,pool,url,retries=3)
requests.packages.urllib3.exceptions.LocationParseError(self,location)
requests.packages.urllib3.exceptions.LocationParseError.__init__(self,location)
requests.packages.urllib3.exceptions.MaxRetryError(self,pool,url)
requests.packages.urllib3.exceptions.MaxRetryError.__init__(self,pool,url)
requests.packages.urllib3.exceptions.PoolError(self,pool,message)
requests.packages.urllib3.exceptions.PoolError.__init__(self,pool,message)
requests.packages.urllib3.exceptions.SSLError(HTTPError)
requests.packages.urllib3.exceptions.TimeoutError(PoolError)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/poolmanager.py----------------------------------------
A:requests.packages.urllib3.poolmanager.log->logging.getLogger(__name__)
A:requests.packages.urllib3.poolmanager.self.pools->RecentlyUsedContainer(num_pools, dispose_func=lambda p: p.close())
A:requests.packages.urllib3.poolmanager.pool->pool_cls(host, port, **self.connection_pool_kw)
A:requests.packages.urllib3.poolmanager.u->parse_url(url)
A:requests.packages.urllib3.poolmanager.conn->self.connection_from_host(u.host, port=u.port, scheme=u.scheme)
A:requests.packages.urllib3.poolmanager.response->self.connection_from_host(u.host, port=u.port, scheme=u.scheme).urlopen(method, u.request_uri, **kw)
A:requests.packages.urllib3.poolmanager.kw['headers']->self._set_proxy_headers(kw.get('headers'))
A:requests.packages.urllib3.poolmanager.proxy_pool->connection_from_url(url, **pool_kw)
requests.packages.urllib3.PoolManager(self,num_pools=10,**connection_pool_kw)
requests.packages.urllib3.PoolManager.clear(self)
requests.packages.urllib3.PoolManager.connection_from_host(self,host,port=None,scheme='http')
requests.packages.urllib3.PoolManager.connection_from_url(self,url)
requests.packages.urllib3.PoolManager.urlopen(self,method,url,redirect=True,**kw)
requests.packages.urllib3.ProxyManager(self,proxy_pool)
requests.packages.urllib3.ProxyManager._set_proxy_headers(self,headers=None)
requests.packages.urllib3.ProxyManager.urlopen(self,method,url,**kw)
requests.packages.urllib3.poolmanager.PoolManager(self,num_pools=10,**connection_pool_kw)
requests.packages.urllib3.poolmanager.PoolManager.__init__(self,num_pools=10,**connection_pool_kw)
requests.packages.urllib3.poolmanager.PoolManager.clear(self)
requests.packages.urllib3.poolmanager.PoolManager.connection_from_host(self,host,port=None,scheme='http')
requests.packages.urllib3.poolmanager.PoolManager.connection_from_url(self,url)
requests.packages.urllib3.poolmanager.PoolManager.urlopen(self,method,url,redirect=True,**kw)
requests.packages.urllib3.poolmanager.ProxyManager(self,proxy_pool)
requests.packages.urllib3.poolmanager.ProxyManager.__init__(self,proxy_pool)
requests.packages.urllib3.poolmanager.ProxyManager._set_proxy_headers(self,headers=None)
requests.packages.urllib3.poolmanager.ProxyManager.urlopen(self,method,url,**kw)
requests.packages.urllib3.poolmanager.proxy_from_url(url,**pool_kw)
requests.packages.urllib3.proxy_from_url(url,**pool_kw)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/filepost.py----------------------------------------
A:requests.packages.urllib3.filepost.body->BytesIO()
A:requests.packages.urllib3.filepost.boundary->choose_boundary()
A:requests.packages.urllib3.filepost.data->str(data)
A:requests.packages.urllib3.filepost.content_type->b('multipart/form-data; boundary=%s' % boundary)
requests.packages.urllib3.encode_multipart_formdata(fields,boundary=None)
requests.packages.urllib3.filepost.choose_boundary()
requests.packages.urllib3.filepost.encode_multipart_formdata(fields,boundary=None)
requests.packages.urllib3.filepost.get_content_type(filename)
requests.packages.urllib3.filepost.iter_fields(fields)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/connectionpool.py----------------------------------------
A:requests.packages.urllib3.connectionpool.log->logging.getLogger(__name__)
A:requests.packages.urllib3.connectionpool._Default->object()
A:requests.packages.urllib3.connectionpool.sock->getattr(conn, 'sock', False)
A:requests.packages.urllib3.connectionpool.self.sock->ssl.wrap_socket(sock, self.key_file, self.cert_file, cert_reqs=self.cert_reqs, ca_certs=self.ca_certs)
A:requests.packages.urllib3.connectionpool.self.pool->self.QueueCls(maxsize)
A:requests.packages.urllib3.connectionpool.conn->self._get_conn(timeout=pool_timeout)
A:requests.packages.urllib3.connectionpool.httplib_response->self._make_request(conn, method, url, timeout=timeout, body=body, headers=headers)
A:requests.packages.urllib3.connectionpool.http_version->getattr(conn, '_http_vsn_str', 'HTTP/?')
A:requests.packages.urllib3.connectionpool.(scheme, host, port)->get_host(url)
A:requests.packages.urllib3.connectionpool.port->port_by_scheme.get(scheme)
A:requests.packages.urllib3.connectionpool.release_conn->response_kw.get('preload_content', True)
A:requests.packages.urllib3.connectionpool.response->response.HTTPResponse.from_httplib(httplib_response, pool=self, connection=response_conn, **response_kw)
A:requests.packages.urllib3.connectionpool.connection->VerifiedHTTPSConnection(host=self.host, port=self.port)
requests.packages.urllib3.HTTPConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None)
requests.packages.urllib3.HTTPConnectionPool._get_conn(self,timeout=None)
requests.packages.urllib3.HTTPConnectionPool._make_request(self,conn,method,url,timeout=_Default,**httplib_request_kw)
requests.packages.urllib3.HTTPConnectionPool._new_conn(self)
requests.packages.urllib3.HTTPConnectionPool._put_conn(self,conn)
requests.packages.urllib3.HTTPConnectionPool.close(self)
requests.packages.urllib3.HTTPConnectionPool.is_same_host(self,url)
requests.packages.urllib3.HTTPConnectionPool.urlopen(self,method,url,body=None,headers=None,retries=3,redirect=True,assert_same_host=True,timeout=_Default,pool_timeout=None,release_conn=None,**response_kw)
requests.packages.urllib3.HTTPSConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.HTTPSConnectionPool._new_conn(self)
requests.packages.urllib3.connection_from_url(url,**kw)
requests.packages.urllib3.connectionpool.ConnectionPool(self,host,port=None)
requests.packages.urllib3.connectionpool.ConnectionPool.__init__(self,host,port=None)
requests.packages.urllib3.connectionpool.ConnectionPool.__str__(self)
requests.packages.urllib3.connectionpool.HTTPConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.__init__(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._get_conn(self,timeout=None)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._make_request(self,conn,method,url,timeout=_Default,**httplib_request_kw)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._new_conn(self)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._put_conn(self,conn)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.close(self)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.is_same_host(self,url)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.urlopen(self,method,url,body=None,headers=None,retries=3,redirect=True,assert_same_host=True,timeout=_Default,pool_timeout=None,release_conn=None,**response_kw)
requests.packages.urllib3.connectionpool.HTTPSConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.connectionpool.HTTPSConnectionPool.__init__(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.connectionpool.HTTPSConnectionPool._new_conn(self)
requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection(HTTPSConnection)
requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection.connect(self)
requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection.set_cert(self,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.connectionpool.connection_from_url(url,**kw)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/_collections.py----------------------------------------
A:requests.packages.urllib3._collections._Null->object()
A:requests.packages.urllib3._collections.self._container->self.ContainerCls()
A:requests.packages.urllib3._collections.self._lock->Lock()
A:requests.packages.urllib3._collections.item->self._container.pop(key)
A:requests.packages.urllib3._collections.evicted_value->self._container.get(key, _Null)
A:requests.packages.urllib3._collections.(_key, evicted_value)->self._container.popitem(last=False)
A:requests.packages.urllib3._collections.value->self._container.pop(key)
A:requests.packages.urllib3._collections.values->list(self._container.values())
requests.packages.urllib3._collections.RecentlyUsedContainer(self,maxsize=10,dispose_func=None)
requests.packages.urllib3._collections.RecentlyUsedContainer.__delitem__(self,key)
requests.packages.urllib3._collections.RecentlyUsedContainer.__getitem__(self,key)
requests.packages.urllib3._collections.RecentlyUsedContainer.__init__(self,maxsize=10,dispose_func=None)
requests.packages.urllib3._collections.RecentlyUsedContainer.__iter__(self)
requests.packages.urllib3._collections.RecentlyUsedContainer.__len__(self)
requests.packages.urllib3._collections.RecentlyUsedContainer.__setitem__(self,key,value)
requests.packages.urllib3._collections.RecentlyUsedContainer.clear(self)
requests.packages.urllib3._collections.RecentlyUsedContainer.keys(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/request.py----------------------------------------
A:requests.packages.urllib3.request._encode_url_methods->set(['DELETE', 'GET', 'HEAD', 'OPTIONS'])
A:requests.packages.urllib3.request._encode_body_methods->set(['PATCH', 'POST', 'PUT', 'TRACE'])
A:requests.packages.urllib3.request.method->method.upper().upper()
A:requests.packages.urllib3.request.(body, content_type)->encode_multipart_formdata(fields or {}, boundary=multipart_boundary)
requests.packages.urllib3.request.RequestMethods(object)
requests.packages.urllib3.request.RequestMethods.request(self,method,url,fields=None,headers=None,**urlopen_kw)
requests.packages.urllib3.request.RequestMethods.request_encode_body(self,method,url,fields=None,headers=None,encode_multipart=True,multipart_boundary=None,**urlopen_kw)
requests.packages.urllib3.request.RequestMethods.request_encode_url(self,method,url,fields=None,**urlopen_kw)
requests.packages.urllib3.request.RequestMethods.urlopen(self,method,url,body=None,headers=None,encode_multipart=True,multipart_boundary=None,**kw)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/response.py----------------------------------------
A:requests.packages.urllib3.response.log->logging.getLogger(__name__)
A:requests.packages.urllib3.response.gzipper->gzip.GzipFile(fileobj=BytesIO(data))
A:requests.packages.urllib3.response.self._body->self.read(decode_content=decode_content)
A:requests.packages.urllib3.response.content_encoding->self.headers.get('content-encoding')
A:requests.packages.urllib3.response.decoder->self.CONTENT_DECODERS.get(content_encoding)
A:requests.packages.urllib3.response.data->decoder(data)
A:requests.packages.urllib3.response.k->k.lower().lower()
A:requests.packages.urllib3.response.has_value->headers.get(k)
A:requests.packages.urllib3.response.v->', '.join([has_value, v])
A:requests.packages.urllib3.response.strict->getattr(r, 'strict', 0)
requests.packages.urllib3.HTTPResponse(self,body='',headers=None,status=0,version=0,reason=None,strict=0,preload_content=True,decode_content=True,original_response=None,pool=None,connection=None)
requests.packages.urllib3.HTTPResponse.data(self)
requests.packages.urllib3.HTTPResponse.from_httplib(ResponseCls,r,**response_kw)
requests.packages.urllib3.HTTPResponse.get_redirect_location(self)
requests.packages.urllib3.HTTPResponse.getheader(self,name,default=None)
requests.packages.urllib3.HTTPResponse.getheaders(self)
requests.packages.urllib3.HTTPResponse.read(self,amt=None,decode_content=None,cache_content=False)
requests.packages.urllib3.HTTPResponse.release_conn(self)
requests.packages.urllib3.response.HTTPResponse(self,body='',headers=None,status=0,version=0,reason=None,strict=0,preload_content=True,decode_content=True,original_response=None,pool=None,connection=None)
requests.packages.urllib3.response.HTTPResponse.__init__(self,body='',headers=None,status=0,version=0,reason=None,strict=0,preload_content=True,decode_content=True,original_response=None,pool=None,connection=None)
requests.packages.urllib3.response.HTTPResponse.data(self)
requests.packages.urllib3.response.HTTPResponse.from_httplib(ResponseCls,r,**response_kw)
requests.packages.urllib3.response.HTTPResponse.get_redirect_location(self)
requests.packages.urllib3.response.HTTPResponse.getheader(self,name,default=None)
requests.packages.urllib3.response.HTTPResponse.getheaders(self)
requests.packages.urllib3.response.HTTPResponse.read(self,amt=None,decode_content=None,cache_content=False)
requests.packages.urllib3.response.HTTPResponse.release_conn(self)
requests.packages.urllib3.response.decode_deflate(data)
requests.packages.urllib3.response.decode_gzip(data)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/util.py----------------------------------------
A:requests.packages.urllib3.util.idx->s.find(d)
A:requests.packages.urllib3.util.(scheme, url)->url.split('://', 1)
A:requests.packages.urllib3.util.(url, path_, delim)->split_first(url, ['/', '?', '#'])
A:requests.packages.urllib3.util.(auth, url)->url.split('@', 1)
A:requests.packages.urllib3.util.(host, url)->url[1:].split(']', 1)
A:requests.packages.urllib3.util.(_host, port)->url.split(':', 1)
A:requests.packages.urllib3.util.port->int(port)
A:requests.packages.urllib3.util.(path, fragment)->path.split('#', 1)
A:requests.packages.urllib3.util.(path, query)->path.split('?', 1)
A:requests.packages.urllib3.util.p->poll()
A:requests.packages.urllib3.util.accept_encoding->','.join(accept_encoding)
A:requests.packages.urllib3.util.sock->getattr(conn, 'sock', False)
requests.packages.urllib3.get_host(url)
requests.packages.urllib3.make_headers(keep_alive=None,accept_encoding=None,user_agent=None,basic_auth=None)
requests.packages.urllib3.util.Url(cls,scheme=None,auth=None,host=None,port=None,path=None,query=None,fragment=None)
requests.packages.urllib3.util.Url.__new__(cls,scheme=None,auth=None,host=None,port=None,path=None,query=None,fragment=None)
requests.packages.urllib3.util.Url.hostname(self)
requests.packages.urllib3.util.Url.request_uri(self)
requests.packages.urllib3.util.get_host(url)
requests.packages.urllib3.util.is_connection_dropped(conn)
requests.packages.urllib3.util.make_headers(keep_alive=None,accept_encoding=None,user_agent=None,basic_auth=None)
requests.packages.urllib3.util.parse_url(url)
requests.packages.urllib3.util.split_first(s,delims)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/packages/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/packages/six.py----------------------------------------
A:requests.packages.urllib3.packages.six.MAXSIZE->int((1 << 63) - 1)
A:requests.packages.urllib3.packages.six.result->self._resolve()
A:requests.packages.urllib3.packages.six.module->_import_module(self.mod)
A:requests.packages.urllib3.packages.six.movessys.modules['six.moves']->_MovedItems('moves')
A:requests.packages.urllib3.packages.six.get_method_function->operator.attrgetter(_meth_func)
A:requests.packages.urllib3.packages.six.get_method_self->operator.attrgetter(_meth_self)
A:requests.packages.urllib3.packages.six.get_function_code->operator.attrgetter(_func_code)
A:requests.packages.urllib3.packages.six.get_function_defaults->operator.attrgetter(_func_defaults)
A:requests.packages.urllib3.packages.six.int2byte->operator.methodcaller('to_bytes', 1, 'big')
A:requests.packages.urllib3.packages.six.exec_->getattr(builtins, 'exec')
A:requests.packages.urllib3.packages.six.print_->getattr(builtins, 'print')
A:requests.packages.urllib3.packages.six.frame->sys._getframe(1)
A:requests.packages.urllib3.packages.six.fp->kwargs.pop('file', sys.stdout)
A:requests.packages.urllib3.packages.six.data->str(data)
A:requests.packages.urllib3.packages.six.sep->kwargs.pop('sep', None)
A:requests.packages.urllib3.packages.six.end->kwargs.pop('end', None)
A:requests.packages.urllib3.packages.six.newline->unicode('\n')
A:requests.packages.urllib3.packages.six.space->unicode(' ')
requests.packages.urllib3.packages.six.MovedAttribute(self,name,old_mod,new_mod,old_attr=None,new_attr=None)
requests.packages.urllib3.packages.six.MovedAttribute.__init__(self,name,old_mod,new_mod,old_attr=None,new_attr=None)
requests.packages.urllib3.packages.six.MovedAttribute._resolve(self)
requests.packages.urllib3.packages.six.MovedModule(self,name,old,new=None)
requests.packages.urllib3.packages.six.MovedModule.__init__(self,name,old,new=None)
requests.packages.urllib3.packages.six.MovedModule._resolve(self)
requests.packages.urllib3.packages.six._LazyDescr(self,name)
requests.packages.urllib3.packages.six._LazyDescr.__get__(self,obj,tp)
requests.packages.urllib3.packages.six._LazyDescr.__init__(self,name)
requests.packages.urllib3.packages.six._MovedItems(types.ModuleType)
requests.packages.urllib3.packages.six._add_doc(func,doc)
requests.packages.urllib3.packages.six._import_module(name)
requests.packages.urllib3.packages.six.add_move(move)
requests.packages.urllib3.packages.six.iteritems(d)
requests.packages.urllib3.packages.six.iterkeys(d)
requests.packages.urllib3.packages.six.itervalues(d)
requests.packages.urllib3.packages.six.remove_move(name)
requests.packages.urllib3.packages.six.with_metaclass(meta,base=object)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/packages/ordered_dict.py----------------------------------------
A:requests.packages.urllib3.packages.ordered_dict.(link_prev, link_next, key)->self.__map.pop(key)
A:requests.packages.urllib3.packages.ordered_dict.value->dict.pop(self, key)
A:requests.packages.urllib3.packages.ordered_dict.__marker->object()
A:requests.packages.urllib3.packages.ordered_dict.inst_dict->vars(self).copy()
A:requests.packages.urllib3.packages.ordered_dict.d->cls()
requests.packages.urllib3.packages.ordered_dict.OrderedDict(self,*args,**kwds)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__delitem__(self,key,dict_delitem=dict.__delitem__)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__eq__(self,other)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__init__(self,*args,**kwds)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__iter__(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__ne__(self,other)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__reduce__(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__repr__(self,_repr_running={})
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__reversed__(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.__setitem__(self,key,value,dict_setitem=dict.__setitem__)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.clear(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.copy(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.fromkeys(cls,iterable,value=None)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.items(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.iteritems(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.iterkeys(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.itervalues(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.keys(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.pop(self,key,default=__marker)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.popitem(self,last=True)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.setdefault(self,key,default=None)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.update(*args,**kwds)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.values(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.viewitems(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.viewkeys(self)
requests.packages.urllib3.packages.ordered_dict.OrderedDict.viewvalues(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py----------------------------------------
A:requests.packages.urllib3.packages.ssl_match_hostname.__init__.frag->re.escape(frag)
A:requests.packages.urllib3.packages.ssl_match_hostname.__init__.san->cert.get('subjectAltName', ())
requests.packages.urllib3.packages.ssl_match_hostname.__init__.CertificateError(ValueError)
requests.packages.urllib3.packages.ssl_match_hostname.__init__._dnsname_to_pat(dn)
requests.packages.urllib3.packages.ssl_match_hostname.__init__.match_hostname(cert,hostname)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/sbcharsetprober.py----------------------------------------
A:requests.packages.chardet2.sbcharsetprober.aBuf->self.filter_without_english_letters(aBuf)
A:requests.packages.chardet2.sbcharsetprober.aLen->len(aBuf)
A:requests.packages.chardet2.sbcharsetprober.cf->self.get_confidence()
requests.packages.chardet2.sbcharsetprober.SingleByteCharSetProber(self,model,reversed=False,nameProber=None)
requests.packages.chardet2.sbcharsetprober.SingleByteCharSetProber.__init__(self,model,reversed=False,nameProber=None)
requests.packages.chardet2.sbcharsetprober.SingleByteCharSetProber.feed(self,aBuf)
requests.packages.chardet2.sbcharsetprober.SingleByteCharSetProber.get_charset_name(self)
requests.packages.chardet2.sbcharsetprober.SingleByteCharSetProber.get_confidence(self)
requests.packages.chardet2.sbcharsetprober.SingleByteCharSetProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/__init__.py----------------------------------------
A:requests.packages.chardet2.__init__.u->universaldetector.UniversalDetector()
requests.packages.chardet2.__init__.detect(aBuf)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/hebrewprober.py----------------------------------------
A:requests.packages.chardet2.hebrewprober.aBuf->self.filter_high_bit_only(aBuf)
requests.packages.chardet2.hebrewprober.HebrewProber(self)
requests.packages.chardet2.hebrewprober.HebrewProber.__init__(self)
requests.packages.chardet2.hebrewprober.HebrewProber.feed(self,aBuf)
requests.packages.chardet2.hebrewprober.HebrewProber.get_charset_name(self)
requests.packages.chardet2.hebrewprober.HebrewProber.get_state(self)
requests.packages.chardet2.hebrewprober.HebrewProber.is_final(self,c)
requests.packages.chardet2.hebrewprober.HebrewProber.is_non_final(self,c)
requests.packages.chardet2.hebrewprober.HebrewProber.reset(self)
requests.packages.chardet2.hebrewprober.HebrewProber.set_model_probers(self,logicalProber,visualProber)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/langcyrillicmodel.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/langthaimodel.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/chardistribution.py----------------------------------------
A:requests.packages.chardet2.chardistribution.order->self.get_order(aBuf)
requests.packages.chardet2.chardistribution.Big5DistributionAnalysis(self)
requests.packages.chardet2.chardistribution.Big5DistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.Big5DistributionAnalysis.get_order(self,aBuf)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis(self)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis.feed(self,aBuf,aCharLen)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis.get_confidence(self)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis.get_order(self,aBuf)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis.got_enough_data(self)
requests.packages.chardet2.chardistribution.CharDistributionAnalysis.reset(self)
requests.packages.chardet2.chardistribution.EUCJPDistributionAnalysis(self)
requests.packages.chardet2.chardistribution.EUCJPDistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.EUCJPDistributionAnalysis.get_order(self,aBuf)
requests.packages.chardet2.chardistribution.EUCKRDistributionAnalysis(self)
requests.packages.chardet2.chardistribution.EUCKRDistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.EUCKRDistributionAnalysis.get_order(self,aBuf)
requests.packages.chardet2.chardistribution.EUCTWDistributionAnalysis(self)
requests.packages.chardet2.chardistribution.EUCTWDistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.EUCTWDistributionAnalysis.get_order(self,aBuf)
requests.packages.chardet2.chardistribution.GB2312DistributionAnalysis(self)
requests.packages.chardet2.chardistribution.GB2312DistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.GB2312DistributionAnalysis.get_order(self,aBuf)
requests.packages.chardet2.chardistribution.SJISDistributionAnalysis(self)
requests.packages.chardet2.chardistribution.SJISDistributionAnalysis.__init__(self)
requests.packages.chardet2.chardistribution.SJISDistributionAnalysis.get_order(self,aBuf)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/gb2312freq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/codingstatemachine.py----------------------------------------
requests.packages.chardet2.codingstatemachine.CodingStateMachine(self,sm)
requests.packages.chardet2.codingstatemachine.CodingStateMachine.__init__(self,sm)
requests.packages.chardet2.codingstatemachine.CodingStateMachine.get_coding_state_machine(self)
requests.packages.chardet2.codingstatemachine.CodingStateMachine.get_current_charlen(self)
requests.packages.chardet2.codingstatemachine.CodingStateMachine.next_state(self,c)
requests.packages.chardet2.codingstatemachine.CodingStateMachine.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/charsetprober.py----------------------------------------
A:requests.packages.chardet2.charsetprober.aBuf->re.sub(b'([A-Za-z])+', b' ', aBuf)
requests.packages.chardet2.charsetprober.CharSetProber(self)
requests.packages.chardet2.charsetprober.CharSetProber.__init__(self)
requests.packages.chardet2.charsetprober.CharSetProber.feed(self,aBuf)
requests.packages.chardet2.charsetprober.CharSetProber.filter_high_bit_only(self,aBuf)
requests.packages.chardet2.charsetprober.CharSetProber.filter_with_english_letters(self,aBuf)
requests.packages.chardet2.charsetprober.CharSetProber.filter_without_english_letters(self,aBuf)
requests.packages.chardet2.charsetprober.CharSetProber.get_charset_name(self)
requests.packages.chardet2.charsetprober.CharSetProber.get_confidence(self)
requests.packages.chardet2.charsetprober.CharSetProber.get_state(self)
requests.packages.chardet2.charsetprober.CharSetProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/jisfreq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/sjisprober.py----------------------------------------
A:requests.packages.chardet2.sjisprober.self._mCodingSM->CodingStateMachine(SJISSMModel)
A:requests.packages.chardet2.sjisprober.self._mDistributionAnalyzer->SJISDistributionAnalysis()
A:requests.packages.chardet2.sjisprober.self._mContextAnalyzer->SJISContextAnalysis()
A:requests.packages.chardet2.sjisprober.aLen->len(aBuf)
A:requests.packages.chardet2.sjisprober.codingState->self._mCodingSM.next_state(aBuf[i])
A:requests.packages.chardet2.sjisprober.charLen->self._mCodingSM.get_current_charlen()
A:requests.packages.chardet2.sjisprober.contxtCf->self._mContextAnalyzer.get_confidence()
A:requests.packages.chardet2.sjisprober.distribCf->self._mDistributionAnalyzer.get_confidence()
requests.packages.chardet2.sjisprober.SJISProber(self)
requests.packages.chardet2.sjisprober.SJISProber.__init__(self)
requests.packages.chardet2.sjisprober.SJISProber.feed(self,aBuf)
requests.packages.chardet2.sjisprober.SJISProber.get_charset_name(self)
requests.packages.chardet2.sjisprober.SJISProber.get_confidence(self)
requests.packages.chardet2.sjisprober.SJISProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/langhungarianmodel.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/euckrfreq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/latin1prober.py----------------------------------------
A:requests.packages.chardet2.latin1prober.aBuf->self.filter_with_english_letters(aBuf)
A:requests.packages.chardet2.latin1prober.total->sum(self._mFreqCounter)
requests.packages.chardet2.latin1prober.Latin1Prober(self)
requests.packages.chardet2.latin1prober.Latin1Prober.__init__(self)
requests.packages.chardet2.latin1prober.Latin1Prober.feed(self,aBuf)
requests.packages.chardet2.latin1prober.Latin1Prober.get_charset_name(self)
requests.packages.chardet2.latin1prober.Latin1Prober.get_confidence(self)
requests.packages.chardet2.latin1prober.Latin1Prober.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/universaldetector.py----------------------------------------
A:requests.packages.chardet2.universaldetector.self._highBitDetector->re.compile(b'[\x80-\xff]')
A:requests.packages.chardet2.universaldetector.self._escDetector->re.compile(b'(\x1b|~{)')
A:requests.packages.chardet2.universaldetector.aLen->len(aBuf)
A:requests.packages.chardet2.universaldetector.self._mEscCharSetProber->EscCharSetProber()
A:requests.packages.chardet2.universaldetector.proberConfidence->prober.get_confidence()
requests.packages.chardet2.universaldetector.UniversalDetector(self)
requests.packages.chardet2.universaldetector.UniversalDetector.__init__(self)
requests.packages.chardet2.universaldetector.UniversalDetector.close(self)
requests.packages.chardet2.universaldetector.UniversalDetector.feed(self,aBuf)
requests.packages.chardet2.universaldetector.UniversalDetector.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/euctwprober.py----------------------------------------
A:requests.packages.chardet2.euctwprober.self._mCodingSM->CodingStateMachine(EUCTWSMModel)
A:requests.packages.chardet2.euctwprober.self._mDistributionAnalyzer->EUCTWDistributionAnalysis()
requests.packages.chardet2.euctwprober.EUCTWProber(self)
requests.packages.chardet2.euctwprober.EUCTWProber.__init__(self)
requests.packages.chardet2.euctwprober.EUCTWProber.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/eucjpprober.py----------------------------------------
A:requests.packages.chardet2.eucjpprober.self._mCodingSM->CodingStateMachine(EUCJPSMModel)
A:requests.packages.chardet2.eucjpprober.self._mDistributionAnalyzer->EUCJPDistributionAnalysis()
A:requests.packages.chardet2.eucjpprober.self._mContextAnalyzer->EUCJPContextAnalysis()
A:requests.packages.chardet2.eucjpprober.aLen->len(aBuf)
A:requests.packages.chardet2.eucjpprober.codingState->self._mCodingSM.next_state(aBuf[i])
A:requests.packages.chardet2.eucjpprober.charLen->self._mCodingSM.get_current_charlen()
A:requests.packages.chardet2.eucjpprober.contxtCf->self._mContextAnalyzer.get_confidence()
A:requests.packages.chardet2.eucjpprober.distribCf->self._mDistributionAnalyzer.get_confidence()
requests.packages.chardet2.eucjpprober.EUCJPProber(self)
requests.packages.chardet2.eucjpprober.EUCJPProber.__init__(self)
requests.packages.chardet2.eucjpprober.EUCJPProber.feed(self,aBuf)
requests.packages.chardet2.eucjpprober.EUCJPProber.get_charset_name(self)
requests.packages.chardet2.eucjpprober.EUCJPProber.get_confidence(self)
requests.packages.chardet2.eucjpprober.EUCJPProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/charsetgroupprober.py----------------------------------------
A:requests.packages.chardet2.charsetgroupprober.st->self.get_state()
A:requests.packages.chardet2.charsetgroupprober.cf->prober.get_confidence()
requests.packages.chardet2.charsetgroupprober.CharSetGroupProber(self)
requests.packages.chardet2.charsetgroupprober.CharSetGroupProber.__init__(self)
requests.packages.chardet2.charsetgroupprober.CharSetGroupProber.feed(self,aBuf)
requests.packages.chardet2.charsetgroupprober.CharSetGroupProber.get_charset_name(self)
requests.packages.chardet2.charsetgroupprober.CharSetGroupProber.get_confidence(self)
requests.packages.chardet2.charsetgroupprober.CharSetGroupProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/langgreekmodel.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/constants.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/langbulgarianmodel.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/jpcntx.py----------------------------------------
A:requests.packages.chardet2.jpcntx.(order, charLen)->self.get_order(aBuf[i:i + 2])
requests.packages.chardet2.jpcntx.EUCJPContextAnalysis(JapaneseContextAnalysis)
requests.packages.chardet2.jpcntx.EUCJPContextAnalysis.get_order(self,aBuf)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis(self)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis.__init__(self)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis.feed(self,aBuf,aLen)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis.get_confidence(self)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis.get_order(self,aBuf)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis.got_enough_data(self)
requests.packages.chardet2.jpcntx.JapaneseContextAnalysis.reset(self)
requests.packages.chardet2.jpcntx.SJISContextAnalysis(JapaneseContextAnalysis)
requests.packages.chardet2.jpcntx.SJISContextAnalysis.get_order(self,aBuf)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/euckrprober.py----------------------------------------
A:requests.packages.chardet2.euckrprober.self._mCodingSM->CodingStateMachine(EUCKRSMModel)
A:requests.packages.chardet2.euckrprober.self._mDistributionAnalyzer->EUCKRDistributionAnalysis()
requests.packages.chardet2.euckrprober.EUCKRProber(self)
requests.packages.chardet2.euckrprober.EUCKRProber.__init__(self)
requests.packages.chardet2.euckrprober.EUCKRProber.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/test.py----------------------------------------
A:requests.packages.chardet2.test.u->UniversalDetector()


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/utf8prober.py----------------------------------------
A:requests.packages.chardet2.utf8prober.self._mCodingSM->CodingStateMachine(UTF8SMModel)
A:requests.packages.chardet2.utf8prober.codingState->self._mCodingSM.next_state(c)
requests.packages.chardet2.utf8prober.UTF8Prober(self)
requests.packages.chardet2.utf8prober.UTF8Prober.__init__(self)
requests.packages.chardet2.utf8prober.UTF8Prober.feed(self,aBuf)
requests.packages.chardet2.utf8prober.UTF8Prober.get_charset_name(self)
requests.packages.chardet2.utf8prober.UTF8Prober.get_confidence(self)
requests.packages.chardet2.utf8prober.UTF8Prober.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/big5freq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/mbcsgroupprober.py----------------------------------------
requests.packages.chardet2.mbcsgroupprober.MBCSGroupProber(self)
requests.packages.chardet2.mbcsgroupprober.MBCSGroupProber.__init__(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/euctwfreq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/escprober.py----------------------------------------
A:requests.packages.chardet2.escprober.self._mActiveSM->len(self._mCodingSM)
A:requests.packages.chardet2.escprober.codingState->codingSM.next_state(c)
A:requests.packages.chardet2.escprober.self._mDetectedCharset->codingSM.get_coding_state_machine()
requests.packages.chardet2.escprober.EscCharSetProber(self)
requests.packages.chardet2.escprober.EscCharSetProber.__init__(self)
requests.packages.chardet2.escprober.EscCharSetProber.feed(self,aBuf)
requests.packages.chardet2.escprober.EscCharSetProber.get_charset_name(self)
requests.packages.chardet2.escprober.EscCharSetProber.get_confidence(self)
requests.packages.chardet2.escprober.EscCharSetProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/escsm.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/mbcharsetprober.py----------------------------------------
A:requests.packages.chardet2.mbcharsetprober.aLen->len(aBuf)
A:requests.packages.chardet2.mbcharsetprober.codingState->self._mCodingSM.next_state(aBuf[i])
A:requests.packages.chardet2.mbcharsetprober.charLen->self._mCodingSM.get_current_charlen()
requests.packages.chardet2.mbcharsetprober.MultiByteCharSetProber(self)
requests.packages.chardet2.mbcharsetprober.MultiByteCharSetProber.__init__(self)
requests.packages.chardet2.mbcharsetprober.MultiByteCharSetProber.feed(self,aBuf)
requests.packages.chardet2.mbcharsetprober.MultiByteCharSetProber.get_charset_name(self)
requests.packages.chardet2.mbcharsetprober.MultiByteCharSetProber.get_confidence(self)
requests.packages.chardet2.mbcharsetprober.MultiByteCharSetProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/big5prober.py----------------------------------------
A:requests.packages.chardet2.big5prober.self._mCodingSM->CodingStateMachine(Big5SMModel)
A:requests.packages.chardet2.big5prober.self._mDistributionAnalyzer->Big5DistributionAnalysis()
requests.packages.chardet2.big5prober.Big5Prober(self)
requests.packages.chardet2.big5prober.Big5Prober.__init__(self)
requests.packages.chardet2.big5prober.Big5Prober.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/langhebrewmodel.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/mbcssm.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/sbcsgroupprober.py----------------------------------------
A:requests.packages.chardet2.sbcsgroupprober.hebrewProber->HebrewProber()
A:requests.packages.chardet2.sbcsgroupprober.logicalHebrewProber->SingleByteCharSetProber(Win1255HebrewModel, False, hebrewProber)
A:requests.packages.chardet2.sbcsgroupprober.visualHebrewProber->SingleByteCharSetProber(Win1255HebrewModel, True, hebrewProber)
requests.packages.chardet2.sbcsgroupprober.SBCSGroupProber(self)
requests.packages.chardet2.sbcsgroupprober.SBCSGroupProber.__init__(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet2/gb2312prober.py----------------------------------------
A:requests.packages.chardet2.gb2312prober.self._mCodingSM->CodingStateMachine(GB2312SMModel)
A:requests.packages.chardet2.gb2312prober.self._mDistributionAnalyzer->GB2312DistributionAnalysis()
requests.packages.chardet2.gb2312prober.GB2312Prober(self)
requests.packages.chardet2.gb2312prober.GB2312Prober.__init__(self)
requests.packages.chardet2.gb2312prober.GB2312Prober.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/common.py----------------------------------------
A:requests.packages.oauthlib.common.encoded->s.encode('utf-8')
A:requests.packages.oauthlib.common.quoted->urllib.quote(encoded, safe)
A:requests.packages.oauthlib.common.unquoted->urllib.unquote(encoded)
A:requests.packages.oauthlib.common.utf8_params->encode_params_utf8(params)
A:requests.packages.oauthlib.common.urlencoded->urllib.urlencode(utf8_params)
A:requests.packages.oauthlib.common.params->decode_params_utf8(params)
A:requests.packages.oauthlib.common.rand->random.SystemRandom()
A:requests.packages.oauthlib.common.queryparams->urlparse.parse_qsl(query, keep_blank_values=True)
A:requests.packages.oauthlib.common.(sch, net, path, par, query, fra)->urlparse.urlparse(uri)
A:requests.packages.oauthlib.common.query->add_params_to_qs(query, params)
A:requests.packages.oauthlib.common.self.decoded_body->extract_params(body)
requests.packages.oauthlib.common.Request(self,uri,http_method=u'GET',body=None,headers=None)
requests.packages.oauthlib.common.Request.__init__(self,uri,http_method=u'GET',body=None,headers=None)
requests.packages.oauthlib.common.Request.uri_query(self)
requests.packages.oauthlib.common.Request.uri_query_params(self)
requests.packages.oauthlib.common.add_params_to_qs(query,params)
requests.packages.oauthlib.common.add_params_to_uri(uri,params)
requests.packages.oauthlib.common.decode_params_utf8(params)
requests.packages.oauthlib.common.encode_params_utf8(params)
requests.packages.oauthlib.common.extract_params(raw)
requests.packages.oauthlib.common.generate_nonce()
requests.packages.oauthlib.common.generate_timestamp()
requests.packages.oauthlib.common.generate_token(length=30,chars=UNICODE_ASCII_CHARACTER_SET)
requests.packages.oauthlib.common.quote(s,safe=u'/')
requests.packages.oauthlib.common.safe_string_equals(a,b)
requests.packages.oauthlib.common.unquote(s)
requests.packages.oauthlib.common.urldecode(query)
requests.packages.oauthlib.common.urlencode(params)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth1/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth1/rfc5849/__init__.py----------------------------------------
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.logger->logging.getLogger('oauthlib')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.(uri, headers, body)->self._render(request)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.collected_params->signature.collect_parameters(uri_query=urlparse.urlparse(uri).query, body=body, headers=headers)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.normalized_params->signature.normalize_parameters(collected_params)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.normalized_uri->signature.normalize_base_string_uri(request.uri)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.base_string->signature.construct_base_string(request.http_method, normalized_uri, normalized_params)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.sig->signature.sign_plaintext(self.client_secret, self.resource_owner_secret)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.headers->parameters.prepare_headers(request.oauth_params, request.headers)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.body->urlencode(body)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.uri->parameters.prepare_request_uri_query(request.oauth_params, request.uri)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.request->Request(uri, http_method, u'', headers)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.content_type->Request(uri, http_method, u'', headers).headers.get('Content-Type', None)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.request.oauth_params->self.get_oauth_params()
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.header_params->signature.collect_parameters(headers=request.headers, exclude_oauth_signature=False)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.body_params->signature.collect_parameters(body=request.body, exclude_oauth_signature=False)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.query_params->signature.collect_parameters(uri_query=request.uri_query, exclude_oauth_signature=False)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.signature_types_with_oauth_params->filter(lambda s: s[2], ((SIGNATURE_TYPE_AUTH_HEADER, params, utils.filter_oauth_params(header_params)), (SIGNATURE_TYPE_BODY, params, utils.filter_oauth_params(body_params)), (SIGNATURE_TYPE_QUERY, params, utils.filter_oauth_params(query_params))))
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.(signature_type, params, oauth_params)->self.get_signature_type_and_params(request)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.oauth_params->dict(oauth_params)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.request_signature->dict(oauth_params).get(u'oauth_signature')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.client_key->dict(oauth_params).get(u'oauth_consumer_key')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.resource_owner_key->dict(oauth_params).get(u'oauth_token')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.nonce->dict(oauth_params).get(u'oauth_nonce')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.timestamp->dict(oauth_params).get(u'oauth_timestamp')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.callback_uri->dict(oauth_params).get(u'oauth_callback')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.verifier->dict(oauth_params).get(u'oauth_verifier')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.signature_method->dict(oauth_params).get(u'oauth_signature_method')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.realm->dict(params).get(u'realm')
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.ts->int(timestamp)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.valid_client->self.validate_client_key(client_key)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.valid_redirect->self.validate_redirect_uri(client_key, callback_uri)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.valid_resource_owner->self.validate_access_token(client_key, resource_owner_key)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.valid_realm->self.validate_realm(client_key, resource_owner_key, uri=request.uri, required_realm=required_realm)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.valid_verifier->self.validate_verifier(client_key, resource_owner_key, verifier)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.request.params->filter(lambda x: x[0] != 'oauth_signature', params)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.rsa_key->self.get_rsa_key(client_key)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.valid_signature->signature.verify_plaintext(request, client_secret, resource_owner_secret)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.client_secret->self.get_client_secret(client_key)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.resource_owner_secret->self.get_access_token_secret(client_key, resource_owner_key)
A:requests.packages.oauthlib.oauth1.rfc5849.__init__.v->all((valid_client, valid_resource_owner, valid_realm, valid_redirect, valid_verifier, valid_signature))
requests.packages.oauthlib.oauth1.rfc5849.__init__.Client(self,client_key,client_secret=None,resource_owner_key=None,resource_owner_secret=None,callback_uri=None,signature_method=SIGNATURE_HMAC,signature_type=SIGNATURE_TYPE_AUTH_HEADER,rsa_key=None,verifier=None)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Client.__init__(self,client_key,client_secret=None,resource_owner_key=None,resource_owner_secret=None,callback_uri=None,signature_method=SIGNATURE_HMAC,signature_type=SIGNATURE_TYPE_AUTH_HEADER,rsa_key=None,verifier=None)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Client._render(self,request,formencode=False)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Client.get_oauth_params(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Client.get_oauth_signature(self,request)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Client.sign(self,uri,http_method=u'GET',body=None,headers=None)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.__init__(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.access_token_length(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.allowed_signature_methods(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.check_access_token(self,request_token)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.check_client_key(self,client_key)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.check_nonce(self,nonce)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.check_realm(self,realm)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.check_request_token(self,request_token)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.check_verifier(self,verifier)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.client_key_length(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.dummy_access_token(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.dummy_client(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.dummy_request_token(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.enforce_ssl(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.get_access_token_secret(self,client_key,access_token)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.get_client_secret(self,client_key)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.get_request_token_secret(self,client_key,request_token)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.get_rsa_key(self,client_key)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.get_signature_type_and_params(self,request)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.nonce_length(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.realms(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.request_token_length(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.safe_characters(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.timestamp_lifetime(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_access_token(self,client_key,access_token)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_client_key(self,client_key)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_realm(self,client_key,access_token,uri=None,required_realm=None)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_redirect_uri(self,client_key,redirect_uri)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_request_token(self,client_key,request_token)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_requested_realm(self,client_key,realm)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_timestamp_and_nonce(self,client_key,timestamp,nonce,request_token=None,access_token=None)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.validate_verifier(self,client_key,request_token,verifier)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.verifier_length(self)
requests.packages.oauthlib.oauth1.rfc5849.__init__.Server.verify_request(self,uri,http_method=u'GET',body=None,headers=None,require_resource_owner=True,require_verifier=False,require_realm=False,required_realm=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth1/rfc5849/utils.py----------------------------------------
A:requests.packages.oauthlib.oauth1.rfc5849.utils.params->filter_oauth_params(params)
A:requests.packages.oauthlib.oauth1.rfc5849.utils.query->query.items().items()
A:requests.packages.oauthlib.oauth1.rfc5849.utils.encoded_parsed->urllib2.parse_keqv_list(encoded_list)
A:requests.packages.oauthlib.oauth1.rfc5849.utils.encoded_str->u.encode('utf-8')
A:requests.packages.oauthlib.oauth1.rfc5849.utils.encoded_list->urllib2.parse_http_list(encoded_str)
A:requests.packages.oauthlib.oauth1.rfc5849.utils.authorization_header->authorization_header.replace(auth_scheme, u'', 1).replace(auth_scheme, u'', 1)
A:requests.packages.oauthlib.oauth1.rfc5849.utils.items->parse_http_list(authorization_header)
requests.packages.oauthlib.oauth1.rfc5849.utils.escape(u)
requests.packages.oauthlib.oauth1.rfc5849.utils.filter_oauth_params(params)
requests.packages.oauthlib.oauth1.rfc5849.utils.filter_params(target)
requests.packages.oauthlib.oauth1.rfc5849.utils.parse_authorization_header(authorization_header)
requests.packages.oauthlib.oauth1.rfc5849.utils.parse_http_list(u)
requests.packages.oauthlib.oauth1.rfc5849.utils.parse_keqv_list(l)
requests.packages.oauthlib.oauth1.rfc5849.utils.unescape(u)
requests.packages.oauthlib.oauth1.rfc5849.utils.urlencode(query)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth1/rfc5849/parameters.py----------------------------------------
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.escaped_name->utils.escape(oauth_parameter_name)
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.escaped_value->utils.escape(value)
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.part->u'{0}="{1}"'.format(escaped_name, escaped_value)
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.authorization_header_parameters->', '.join(authorization_header_parameters_parts)
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.merged->list(params)
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.(sch, net, path, par, query, fra)->urlparse(uri)
A:requests.packages.oauthlib.oauth1.rfc5849.parameters.query->urlencode(_append_params(oauth_params, extract_params(query) or []))
requests.packages.oauthlib.oauth1.rfc5849.parameters._append_params(oauth_params,params)
requests.packages.oauthlib.oauth1.rfc5849.parameters.prepare_form_encoded_body(oauth_params,body)
requests.packages.oauthlib.oauth1.rfc5849.parameters.prepare_headers(oauth_params,headers=None,realm=None)
requests.packages.oauthlib.oauth1.rfc5849.parameters.prepare_request_uri_query(oauth_params,uri)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth1/rfc5849/signature.py----------------------------------------
A:requests.packages.oauthlib.oauth1.rfc5849.signature.base_string->construct_base_string(request.http_method, uri, norm_params)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.(scheme, netloc, path, params, query, fragment)->urlparse.urlparse(uri)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.scheme->scheme.lower().lower()
A:requests.packages.oauthlib.oauth1.rfc5849.signature.netloc->netloc.lower().lower()
A:requests.packages.oauthlib.oauth1.rfc5849.signature.(host, port)->netloc.lower().lower().split(u':', 1)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.headers_lower->dict(((k.lower(), v) for (k, v) in headers.items()))
A:requests.packages.oauthlib.oauth1.rfc5849.signature.authorization_header->dict(((k.lower(), v) for (k, v) in headers.items())).get(u'authorization')
A:requests.packages.oauthlib.oauth1.rfc5849.signature.v->utils.unescape(v)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.unescaped_params->filter(lambda i: i[0] != u'oauth_signature', unescaped_params)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.key->Crypto.PublicKey.RSA.importKey(rsa_public_key)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.key_utf8->Crypto.PublicKey.RSA.importKey(rsa_public_key).encode('utf-8')
A:requests.packages.oauthlib.oauth1.rfc5849.signature.text_utf8->text.encode('utf-8')
A:requests.packages.oauthlib.oauth1.rfc5849.signature.signature->sign_plaintext(client_secret, resource_owner_secret)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.h->Crypto.Hash.SHA.new(message)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.p->Crypto.Signature.PKCS1_v1_5.new(key)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.norm_params->normalize_parameters(request.params)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.uri->normalize_base_string_uri(request.uri)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.message->construct_base_string(request.http_method, uri, norm_params)
A:requests.packages.oauthlib.oauth1.rfc5849.signature.sig->binascii.a2b_base64(request.signature)
requests.packages.oauthlib.oauth1.rfc5849.signature.collect_parameters(uri_query='',body=[],headers=None,exclude_oauth_signature=True)
requests.packages.oauthlib.oauth1.rfc5849.signature.construct_base_string(http_method,base_string_uri,normalized_encoded_request_parameters)
requests.packages.oauthlib.oauth1.rfc5849.signature.normalize_base_string_uri(uri)
requests.packages.oauthlib.oauth1.rfc5849.signature.normalize_parameters(params)
requests.packages.oauthlib.oauth1.rfc5849.signature.sign_hmac_sha1(base_string,client_secret,resource_owner_secret)
requests.packages.oauthlib.oauth1.rfc5849.signature.sign_plaintext(client_secret,resource_owner_secret)
requests.packages.oauthlib.oauth1.rfc5849.signature.sign_rsa_sha1(base_string,rsa_private_key)
requests.packages.oauthlib.oauth1.rfc5849.signature.verify_hmac_sha1(request,client_secret=None,resource_owner_secret=None)
requests.packages.oauthlib.oauth1.rfc5849.signature.verify_plaintext(request,client_secret=None,resource_owner_secret=None)
requests.packages.oauthlib.oauth1.rfc5849.signature.verify_rsa_sha1(request,rsa_public_key)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth2/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth2/draft25/__init__.py----------------------------------------
A:requests.packages.oauthlib.oauth2.draft25.__init__.headers->prepare_mac_header(self.token, uri, self.key, http_method, headers=headers, body=body, ext=self.ext, hash_algorithm=self.hash_algorithm)
A:requests.packages.oauthlib.oauth2.draft25.__init__.uri->prepare_bearer_uri(self.token, uri)
A:requests.packages.oauthlib.oauth2.draft25.__init__.body->prepare_bearer_body(self.token, body)
A:requests.packages.oauthlib.oauth2.draft25.__init__.self.access_token->parse_token_response(body, scope=scope).get(u'access_token')
A:requests.packages.oauthlib.oauth2.draft25.__init__.self.refresh_token->parse_token_response(body, scope=scope).get(u'refresh_token')
A:requests.packages.oauthlib.oauth2.draft25.__init__.self.token_type->parse_token_response(body, scope=scope).get(u'token_type')
A:requests.packages.oauthlib.oauth2.draft25.__init__.self.expires_in->parse_token_response(body, scope=scope).get(u'expires_in')
A:requests.packages.oauthlib.oauth2.draft25.__init__.self.code->parse_token_response(body, scope=scope).get(u'code')
A:requests.packages.oauthlib.oauth2.draft25.__init__.response->parse_token_response(body, scope=scope)
requests.packages.oauthlib.oauth2.draft25.__init__.Client(self,client_id,default_redirect_uri=None,token_type=None,access_token=None,refresh_token=None)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.__init__(self,client_id,default_redirect_uri=None,token_type=None,access_token=None,refresh_token=None)
requests.packages.oauthlib.oauth2.draft25.__init__.Client._add_bearer_token(self,uri,http_method=u'GET',body=None,headers=None,token_placement=AUTH_HEADER)
requests.packages.oauthlib.oauth2.draft25.__init__.Client._add_mac_token(self,uri,http_method=u'GET',body=None,headers=None,token_placement=AUTH_HEADER)
requests.packages.oauthlib.oauth2.draft25.__init__.Client._populate_attributes(self,response)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.add_token(self,uri,http_method=u'GET',body=None,headers=None,token_placement=AUTH_HEADER)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.parse_request_body_response(self,*args,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.parse_request_uri_response(self,*args,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.prepare_refresh_body(self,body=u'',refresh_token=None,scope=None)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.prepare_request_body(self,*args,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.Client.prepare_request_uri(self,*args,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.NativeApplicationClient(Client)
requests.packages.oauthlib.oauth2.draft25.__init__.NativeApplicationClient.parse_request_body_response(self,body,scope=None)
requests.packages.oauthlib.oauth2.draft25.__init__.NativeApplicationClient.prepare_request_body(self,body=u'',scope=None,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.PasswordCredentialsClient(Client)
requests.packages.oauthlib.oauth2.draft25.__init__.PasswordCredentialsClient.parse_request_body_response(self,body,scope=None)
requests.packages.oauthlib.oauth2.draft25.__init__.PasswordCredentialsClient.prepare_request_body(self,username,password,body=u'',scope=None,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.Server(object)
requests.packages.oauthlib.oauth2.draft25.__init__.UserAgentClient(Client)
requests.packages.oauthlib.oauth2.draft25.__init__.UserAgentClient.parse_request_uri_response(self,uri,state=None,scope=None)
requests.packages.oauthlib.oauth2.draft25.__init__.UserAgentClient.prepare_request_uri(self,uri,redirect_uri=None,scope=None,state=None,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.WebApplicationClient(Client)
requests.packages.oauthlib.oauth2.draft25.__init__.WebApplicationClient.parse_request_body_response(self,body,scope=None)
requests.packages.oauthlib.oauth2.draft25.__init__.WebApplicationClient.parse_request_uri_response(self,uri,state=None)
requests.packages.oauthlib.oauth2.draft25.__init__.WebApplicationClient.prepare_request_body(self,code,body=u'',redirect_uri=None,**kwargs)
requests.packages.oauthlib.oauth2.draft25.__init__.WebApplicationClient.prepare_request_uri(self,uri,redirect_uri=None,scope=None,state=None,**kwargs)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth2/draft25/utils.py----------------------------------------
A:requests.packages.oauthlib.oauth2.draft25.utils.(sch, netloc, path, par, query, fra)->urlparse.urlparse(uri)
A:requests.packages.oauthlib.oauth2.draft25.utils.(netloc, port)->netloc.split(u':', 1)
A:requests.packages.oauthlib.oauth2.draft25.utils.port->default_ports.get(sch.upper())
requests.packages.oauthlib.oauth2.draft25.utils.escape(u)
requests.packages.oauthlib.oauth2.draft25.utils.host_from_uri(uri)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth2/draft25/parameters.py----------------------------------------
A:requests.packages.oauthlib.oauth2.draft25.parameters.params->json.loads(body)
A:requests.packages.oauthlib.oauth2.draft25.parameters.new_scope->json.loads(body).get(u'scope', None)
requests.packages.oauthlib.oauth2.draft25.parameters.parse_authorization_code_response(uri,state=None)
requests.packages.oauthlib.oauth2.draft25.parameters.parse_implicit_response(uri,state=None,scope=None)
requests.packages.oauthlib.oauth2.draft25.parameters.parse_token_response(body,scope=None)
requests.packages.oauthlib.oauth2.draft25.parameters.prepare_grant_uri(uri,client_id,response_type,redirect_uri=None,scope=None,state=None,**kwargs)
requests.packages.oauthlib.oauth2.draft25.parameters.prepare_token_request(grant_type,body=u'',**kwargs)
requests.packages.oauthlib.oauth2.draft25.parameters.validate_token_parameters(params,scope=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/oauthlib/oauth2/draft25/tokens.py----------------------------------------
A:requests.packages.oauthlib.oauth2.draft25.tokens.http_method->http_method.upper().upper()
A:requests.packages.oauthlib.oauth2.draft25.tokens.(host, port)->utils.host_from_uri(uri)
A:requests.packages.oauthlib.oauth2.draft25.tokens.(sch, net, path, par, query, fra)->urlparse(uri)
A:requests.packages.oauthlib.oauth2.draft25.tokens.bodyhash->b2a_base64(h(body).digest())[:-1].decode('utf-8')
A:requests.packages.oauthlib.oauth2.draft25.tokens.key->key.encode('utf-8').encode('utf-8')
A:requests.packages.oauthlib.oauth2.draft25.tokens.sign->b2a_base64(sign.digest())[:-1].decode('utf-8')
A:requests.packages.oauthlib.oauth2.draft25.tokens.headers[u'Authorization']->u', '.join(header)
requests.packages.oauthlib.oauth2.draft25.tokens.prepare_bearer_body(token,body=u'')
requests.packages.oauthlib.oauth2.draft25.tokens.prepare_bearer_headers(token,headers=None)
requests.packages.oauthlib.oauth2.draft25.tokens.prepare_bearer_uri(token,uri)
requests.packages.oauthlib.oauth2.draft25.tokens.prepare_mac_header(token,uri,key,http_method,nonce=None,headers=None,body=None,ext=u'',hash_algorithm=u'hmac-sha-1')


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/__init__.py----------------------------------------
A:requests.packages.chardet.__init__.u->universaldetector.UniversalDetector()
requests.packages.chardet.__init__.detect(aBuf)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/hebrewprober.py----------------------------------------
A:requests.packages.chardet.hebrewprober.aBuf->self.filter_high_bit_only(aBuf)
requests.packages.chardet.hebrewprober.HebrewProber(self)
requests.packages.chardet.hebrewprober.HebrewProber.__init__(self)
requests.packages.chardet.hebrewprober.HebrewProber.feed(self,aBuf)
requests.packages.chardet.hebrewprober.HebrewProber.get_charset_name(self)
requests.packages.chardet.hebrewprober.HebrewProber.get_state(self)
requests.packages.chardet.hebrewprober.HebrewProber.is_final(self,c)
requests.packages.chardet.hebrewprober.HebrewProber.is_non_final(self,c)
requests.packages.chardet.hebrewprober.HebrewProber.reset(self)
requests.packages.chardet.hebrewprober.HebrewProber.set_model_probers(self,logicalProber,visualProber)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/gb2312freq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/codingstatemachine.py----------------------------------------
requests.packages.chardet.codingstatemachine.CodingStateMachine(self,sm)
requests.packages.chardet.codingstatemachine.CodingStateMachine.__init__(self,sm)
requests.packages.chardet.codingstatemachine.CodingStateMachine.get_coding_state_machine(self)
requests.packages.chardet.codingstatemachine.CodingStateMachine.get_current_charlen(self)
requests.packages.chardet.codingstatemachine.CodingStateMachine.next_state(self,c)
requests.packages.chardet.codingstatemachine.CodingStateMachine.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/charsetprober.py----------------------------------------
A:requests.packages.chardet.charsetprober.aBuf->re.sub('([A-Za-z])+', ' ', aBuf)
requests.packages.chardet.charsetprober.CharSetProber(self)
requests.packages.chardet.charsetprober.CharSetProber.__init__(self)
requests.packages.chardet.charsetprober.CharSetProber.feed(self,aBuf)
requests.packages.chardet.charsetprober.CharSetProber.filter_high_bit_only(self,aBuf)
requests.packages.chardet.charsetprober.CharSetProber.filter_with_english_letters(self,aBuf)
requests.packages.chardet.charsetprober.CharSetProber.filter_without_english_letters(self,aBuf)
requests.packages.chardet.charsetprober.CharSetProber.get_charset_name(self)
requests.packages.chardet.charsetprober.CharSetProber.get_confidence(self)
requests.packages.chardet.charsetprober.CharSetProber.get_state(self)
requests.packages.chardet.charsetprober.CharSetProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/jisfreq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/sjisprober.py----------------------------------------
A:requests.packages.chardet.sjisprober.self._mCodingSM->CodingStateMachine(SJISSMModel)
A:requests.packages.chardet.sjisprober.self._mDistributionAnalyzer->SJISDistributionAnalysis()
A:requests.packages.chardet.sjisprober.self._mContextAnalyzer->SJISContextAnalysis()
A:requests.packages.chardet.sjisprober.aLen->len(aBuf)
A:requests.packages.chardet.sjisprober.codingState->self._mCodingSM.next_state(aBuf[i])
A:requests.packages.chardet.sjisprober.charLen->self._mCodingSM.get_current_charlen()
A:requests.packages.chardet.sjisprober.contxtCf->self._mContextAnalyzer.get_confidence()
A:requests.packages.chardet.sjisprober.distribCf->self._mDistributionAnalyzer.get_confidence()
requests.packages.chardet.sjisprober.SJISProber(self)
requests.packages.chardet.sjisprober.SJISProber.__init__(self)
requests.packages.chardet.sjisprober.SJISProber.feed(self,aBuf)
requests.packages.chardet.sjisprober.SJISProber.get_charset_name(self)
requests.packages.chardet.sjisprober.SJISProber.get_confidence(self)
requests.packages.chardet.sjisprober.SJISProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/euckrfreq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/latin1prober.py----------------------------------------
A:requests.packages.chardet.latin1prober.aBuf->self.filter_with_english_letters(aBuf)
A:requests.packages.chardet.latin1prober.total->reduce(operator.add, self._mFreqCounter)
requests.packages.chardet.latin1prober.Latin1Prober(self)
requests.packages.chardet.latin1prober.Latin1Prober.__init__(self)
requests.packages.chardet.latin1prober.Latin1Prober.feed(self,aBuf)
requests.packages.chardet.latin1prober.Latin1Prober.get_charset_name(self)
requests.packages.chardet.latin1prober.Latin1Prober.get_confidence(self)
requests.packages.chardet.latin1prober.Latin1Prober.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/euctwprober.py----------------------------------------
A:requests.packages.chardet.euctwprober.self._mCodingSM->CodingStateMachine(EUCTWSMModel)
A:requests.packages.chardet.euctwprober.self._mDistributionAnalyzer->EUCTWDistributionAnalysis()
requests.packages.chardet.euctwprober.EUCTWProber(self)
requests.packages.chardet.euctwprober.EUCTWProber.__init__(self)
requests.packages.chardet.euctwprober.EUCTWProber.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/eucjpprober.py----------------------------------------
A:requests.packages.chardet.eucjpprober.self._mCodingSM->CodingStateMachine(EUCJPSMModel)
A:requests.packages.chardet.eucjpprober.self._mDistributionAnalyzer->EUCJPDistributionAnalysis()
A:requests.packages.chardet.eucjpprober.self._mContextAnalyzer->EUCJPContextAnalysis()
A:requests.packages.chardet.eucjpprober.aLen->len(aBuf)
A:requests.packages.chardet.eucjpprober.codingState->self._mCodingSM.next_state(aBuf[i])
A:requests.packages.chardet.eucjpprober.charLen->self._mCodingSM.get_current_charlen()
A:requests.packages.chardet.eucjpprober.contxtCf->self._mContextAnalyzer.get_confidence()
A:requests.packages.chardet.eucjpprober.distribCf->self._mDistributionAnalyzer.get_confidence()
requests.packages.chardet.eucjpprober.EUCJPProber(self)
requests.packages.chardet.eucjpprober.EUCJPProber.__init__(self)
requests.packages.chardet.eucjpprober.EUCJPProber.feed(self,aBuf)
requests.packages.chardet.eucjpprober.EUCJPProber.get_charset_name(self)
requests.packages.chardet.eucjpprober.EUCJPProber.get_confidence(self)
requests.packages.chardet.eucjpprober.EUCJPProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/euckrprober.py----------------------------------------
A:requests.packages.chardet.euckrprober.self._mCodingSM->CodingStateMachine(EUCKRSMModel)
A:requests.packages.chardet.euckrprober.self._mDistributionAnalyzer->EUCKRDistributionAnalysis()
requests.packages.chardet.euckrprober.EUCKRProber(self)
requests.packages.chardet.euckrprober.EUCKRProber.__init__(self)
requests.packages.chardet.euckrprober.EUCKRProber.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/utf8prober.py----------------------------------------
A:requests.packages.chardet.utf8prober.self._mCodingSM->CodingStateMachine(UTF8SMModel)
A:requests.packages.chardet.utf8prober.codingState->self._mCodingSM.next_state(c)
requests.packages.chardet.utf8prober.UTF8Prober(self)
requests.packages.chardet.utf8prober.UTF8Prober.__init__(self)
requests.packages.chardet.utf8prober.UTF8Prober.feed(self,aBuf)
requests.packages.chardet.utf8prober.UTF8Prober.get_charset_name(self)
requests.packages.chardet.utf8prober.UTF8Prober.get_confidence(self)
requests.packages.chardet.utf8prober.UTF8Prober.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/big5freq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/mbcsgroupprober.py----------------------------------------
requests.packages.chardet.mbcsgroupprober.MBCSGroupProber(self)
requests.packages.chardet.mbcsgroupprober.MBCSGroupProber.__init__(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/euctwfreq.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/escsm.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/mbcharsetprober.py----------------------------------------
A:requests.packages.chardet.mbcharsetprober.aLen->len(aBuf)
A:requests.packages.chardet.mbcharsetprober.codingState->self._mCodingSM.next_state(aBuf[i])
A:requests.packages.chardet.mbcharsetprober.charLen->self._mCodingSM.get_current_charlen()
requests.packages.chardet.mbcharsetprober.MultiByteCharSetProber(self)
requests.packages.chardet.mbcharsetprober.MultiByteCharSetProber.__init__(self)
requests.packages.chardet.mbcharsetprober.MultiByteCharSetProber.feed(self,aBuf)
requests.packages.chardet.mbcharsetprober.MultiByteCharSetProber.get_charset_name(self)
requests.packages.chardet.mbcharsetprober.MultiByteCharSetProber.get_confidence(self)
requests.packages.chardet.mbcharsetprober.MultiByteCharSetProber.reset(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/big5prober.py----------------------------------------
A:requests.packages.chardet.big5prober.self._mCodingSM->CodingStateMachine(Big5SMModel)
A:requests.packages.chardet.big5prober.self._mDistributionAnalyzer->Big5DistributionAnalysis()
requests.packages.chardet.big5prober.Big5Prober(self)
requests.packages.chardet.big5prober.Big5Prober.__init__(self)
requests.packages.chardet.big5prober.Big5Prober.get_charset_name(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/mbcssm.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.14.1/lib/python3.6/site-packages/requests/packages/chardet/gb2312prober.py----------------------------------------
A:requests.packages.chardet.gb2312prober.self._mCodingSM->CodingStateMachine(GB2312SMModel)
A:requests.packages.chardet.gb2312prober.self._mDistributionAnalyzer->GB2312DistributionAnalysis()
requests.packages.chardet.gb2312prober.GB2312Prober(self)
requests.packages.chardet.gb2312prober.GB2312Prober.__init__(self)
requests.packages.chardet.gb2312prober.GB2312Prober.get_charset_name(self)

