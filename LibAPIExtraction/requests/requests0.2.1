
----------------------------------------/home/zhang/Packages/requests/requests0.2.1/core.py----------------------------------------
A:requests.core.self.headers->dict()
A:requests.core.self.response->Response()
A:requests.core.authr->urllib2.HTTPPasswordMgrWithDefaultRealm()
A:requests.core.handler->urllib2.HTTPBasicAuthHandler(authr)
A:requests.core.opener->self._get_opener()
A:requests.core.params->urllib.urlencode(self.params)
A:requests.core.req->_Request(self.url, method='POST')
A:requests.core.resp->opener(req)
A:requests.core.self.response.content->opener(req).read()
A:requests.core.(datagen, headers)->multipart_encode(self.files)
A:requests.core.req.data->urllib.urlencode(self.data)
A:requests.core.r->Request()
A:requests.core.r.auth->_detect_auth(url, auth)
requests.AuthObject(self,username,password)
requests.AuthenticationError(RequestException)
requests.InvalidMethod(RequestException)
requests.Request(self)
requests.Request.__repr__(self)
requests.Request.__setattr__(self,name,value)
requests.Request._checks(self)
requests.Request._get_opener(self)
requests.Request.send(self,anyway=False)
requests.RequestException(Exception)
requests.Response(self)
requests.Response.__repr__(self)
requests.URLRequired(RequestException)
requests._Request(self,url,data=None,headers={},origin_req_host=None,unverifiable=False,method=None)
requests._Request.get_method(self)
requests._detect_auth(url,auth)
requests._get_autoauth(url)
requests.add_autoauth(url,authobject)
requests.core.AuthObject(self,username,password)
requests.core.AuthObject.__init__(self,username,password)
requests.core.AuthenticationError(RequestException)
requests.core.InvalidMethod(RequestException)
requests.core.Request(self)
requests.core.Request.__init__(self)
requests.core.Request.__repr__(self)
requests.core.Request.__setattr__(self,name,value)
requests.core.Request._checks(self)
requests.core.Request._get_opener(self)
requests.core.Request.send(self,anyway=False)
requests.core.RequestException(Exception)
requests.core.Response(self)
requests.core.Response.__init__(self)
requests.core.Response.__repr__(self)
requests.core.URLRequired(RequestException)
requests.core._Request(self,url,data=None,headers={},origin_req_host=None,unverifiable=False,method=None)
requests.core._Request.__init__(self,url,data=None,headers={},origin_req_host=None,unverifiable=False,method=None)
requests.core._Request.get_method(self)
requests.core._detect_auth(url,auth)
requests.core._get_autoauth(url)
requests.core.add_autoauth(url,authobject)
requests.core.delete(url,params={},headers={},auth=None)
requests.core.get(url,params={},headers={},auth=None)
requests.core.head(url,params={},headers={},auth=None)
requests.core.post(url,data={},headers={},files=None,auth=None)
requests.core.put(url,data='',headers={},files={},auth=None)
requests.delete(url,params={},headers={},auth=None)
requests.get(url,params={},headers={},auth=None)
requests.head(url,params={},headers={},auth=None)
requests.post(url,data={},headers={},files=None,auth=None)
requests.put(url,data='',headers={},files={},auth=None)


----------------------------------------/home/zhang/Packages/requests/requests0.2.1/__init__.py----------------------------------------


----------------------------------------/home/zhang/Packages/requests/requests0.2.1/packages/__init__.py----------------------------------------


----------------------------------------/home/zhang/Packages/requests/requests0.2.1/packages/poster/encode.py----------------------------------------
A:requests.packages.poster.encode.bits->random.getrandbits(160)
A:requests.packages.poster.encode.data->data.encode('utf-8').encode('utf-8')
A:requests.packages.poster.encode.self.name->Header(name).encode()
A:requests.packages.poster.encode.self.value->_strify(value)
A:requests.packages.poster.encode.self.filename->self.filename.encode('string_escape').replace('"', '\\"')
A:requests.packages.poster.encode.self.filetype->_strify(filetype)
A:requests.packages.poster.encode.self.filesize->fileobj.tell()
A:requests.packages.poster.encode.params->MultipartParam.from_params(params)
A:requests.packages.poster.encode.filename->getattr(value, 'name', None)
A:requests.packages.poster.encode.boundary->urllib.quote_plus(boundary)
A:requests.packages.poster.encode.value->self.fileobj.read()
A:requests.packages.poster.encode.total->self.get_size(boundary)
A:requests.packages.poster.encode.block->self.param_iter.next()
A:requests.packages.poster.encode.boundary_exp->re.compile('^%s$' % re.escape(encoded_boundary), re.M)
A:requests.packages.poster.encode.valuesize->len(self.value)
A:requests.packages.poster.encode.size->sum((p.get_size(boundary) for p in MultipartParam.from_params(params)))
A:requests.packages.poster.encode.headers['Content-Length']->str(get_body_size(params, boundary))
A:requests.packages.poster.encode.self.total->get_body_size(params, boundary)
A:requests.packages.poster.encode.self.param_iter->self.p.iter_encode(self.boundary)
A:requests.packages.poster.encode.headers->get_headers(params, boundary)
requests.packages.poster.encode.MultipartParam(self,name,value=None,filename=None,filetype=None,filesize=None,fileobj=None,cb=None)
requests.packages.poster.encode.MultipartParam.__cmp__(self,other)
requests.packages.poster.encode.MultipartParam.__init__(self,name,value=None,filename=None,filetype=None,filesize=None,fileobj=None,cb=None)
requests.packages.poster.encode.MultipartParam.encode(self,boundary)
requests.packages.poster.encode.MultipartParam.encode_hdr(self,boundary)
requests.packages.poster.encode.MultipartParam.from_file(cls,paramname,filename)
requests.packages.poster.encode.MultipartParam.from_params(cls,params)
requests.packages.poster.encode.MultipartParam.get_size(self,boundary)
requests.packages.poster.encode.MultipartParam.iter_encode(self,boundary,blocksize=4096)
requests.packages.poster.encode.MultipartParam.reset(self)
requests.packages.poster.encode._strify(s)
requests.packages.poster.encode.encode_and_quote(data)
requests.packages.poster.encode.encode_file_header(boundary,paramname,filesize,filename=None,filetype=None)
requests.packages.poster.encode.encode_string(boundary,name,value)
requests.packages.poster.encode.get_body_size(params,boundary)
requests.packages.poster.encode.get_headers(params,boundary)
requests.packages.poster.encode.multipart_encode(params,boundary=None,cb=None)
requests.packages.poster.encode.multipart_yielder(self,params,boundary,cb)
requests.packages.poster.encode.multipart_yielder.__init__(self,params,boundary,cb)
requests.packages.poster.encode.multipart_yielder.__iter__(self)
requests.packages.poster.encode.multipart_yielder.next(self)
requests.packages.poster.encode.multipart_yielder.reset(self)


----------------------------------------/home/zhang/Packages/requests/requests0.2.1/packages/poster/__init__.py----------------------------------------

