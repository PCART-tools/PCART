
----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/structures.py----------------------------------------
A:requests.structures.self._lower_keys->dict(((k.lower(), k) for k in list(self.keys())))
requests.structures.CaseInsensitiveDict(dict)
requests.structures.CaseInsensitiveDict.__contains__(self,key)
requests.structures.CaseInsensitiveDict.__delitem__(self,key)
requests.structures.CaseInsensitiveDict.__getitem__(self,key)
requests.structures.CaseInsensitiveDict.__setitem__(self,key,value)
requests.structures.CaseInsensitiveDict._clear_lower_keys(self)
requests.structures.CaseInsensitiveDict.get(self,key,default=None)
requests.structures.CaseInsensitiveDict.lower_keys(self)
requests.structures.LookupDict(self,name=None)
requests.structures.LookupDict.__getitem__(self,key)
requests.structures.LookupDict.__init__(self,name=None)
requests.structures.LookupDict.__repr__(self)
requests.structures.LookupDict.get(self,key,default=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/defaults.py----------------------------------------
A:requests.defaults.defaults->dict()


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/utils.py----------------------------------------
A:requests.utils.CERTIFI_BUNDLE_PATH->certifi.where()
A:requests.utils.d->d.items().items()
A:requests.utils.ri->urlparse(url)
A:requests.utils._netrc->netrc(netrc_path).authenticators(host)
A:requests.utils.cookies->dict()
A:requests.utils.c->chr(int(h, 16))
A:requests.utils.name->getattr(obj, 'name', None)
A:requests.utils.item->unquote_header_value(item[1:-1])
A:requests.utils.(name, value)->unquote_header_value(item[1:-1]).split('=', 1)
A:requests.utils.value->unquote_header_value(value[1:-1])
A:requests.utils.headers->list(headers.items())
A:requests.utils.cj->add_dict_to_cookiejar(cj, cookie_dict)
A:requests.utils.cookie->compat.cookielib.Cookie(version=0, name=k, value=v, port=None, port_specified=False, domain='', domain_specified=False, domain_initial_dot=False, path='/', path_specified=True, secure=False, expires=None, discard=True, comment=None, comment_url=None, rest={'HttpOnly': None}, rfc2109=False)
A:requests.utils.charset_re->re.compile('<meta.*?charset=["\\\']*(.+?)["\\\'>]', flags=re.I)
A:requests.utils.content_type->list(headers.items()).get('content-type')
A:requests.utils.(content_type, params)->cgi.parse_header(content_type)
A:requests.utils.decoder->codecs.getincrementaldecoder(r.encoding)(errors='replace')
A:requests.utils.rv->zlib.decompressobj(zlib_mode).decompress(chunk)
A:requests.utils.encoding->get_encoding_from_headers(r.headers)
A:requests.utils.dec->zlib.decompressobj(zlib_mode)
A:requests.utils.buf->zlib.decompressobj(zlib_mode).decompress(bytes())
A:requests.utils.gen->stream_decompress(gen, mode='deflate')
A:requests.utils.UNRESERVED_SET->frozenset('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' + '0123456789-._~')
A:requests.utils.parts->uri.split('%')
requests.utils.add_dict_to_cookiejar(cj,cookie_dict)
requests.utils.cookiejar_from_dict(cookie_dict)
requests.utils.dict_from_cookiejar(cj)
requests.utils.dict_from_string(s)
requests.utils.dict_to_sequence(d)
requests.utils.get_encoding_from_headers(headers)
requests.utils.get_encodings_from_content(content)
requests.utils.get_netrc_auth(url)
requests.utils.get_os_ca_bundle_path()
requests.utils.get_unicode_from_response(r)
requests.utils.guess_filename(obj)
requests.utils.header_expand(headers)
requests.utils.parse_dict_header(value)
requests.utils.parse_list_header(value)
requests.utils.randombytes(n)
requests.utils.requote_uri(uri)
requests.utils.stream_decode_response_unicode(iterator,r)
requests.utils.stream_decompress(iterator,mode='gzip')
requests.utils.stream_untransfer(gen,resp)
requests.utils.unquote_header_value(value,is_filename=False)
requests.utils.unquote_unreserved(uri)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/sessions.py----------------------------------------
A:requests.sessions.kwargs->default_kwarg.copy()
A:requests.sessions.self.poolmanager->PoolManager(num_pools=self.config.get('pool_connections'), maxsize=self.config.get('pool_maxsize'))
A:requests.sessions.method->str(method).upper()
A:requests.sessions.headers[k]->header_expand(v)
A:requests.sessions.args->dispatch_hook('args', args['hooks'], args)
A:requests.sessions.session_val->getattr(self, attr, None)
A:requests.sessions.local_val->dispatch_hook('args', args['hooks'], args).get(attr)
A:requests.sessions.args[attr]->merge_kwargs(local_val, session_val)
A:requests.sessions.r->Request(**args)
requests.Session(self,headers=None,cookies=None,auth=None,timeout=None,proxies=None,hooks=None,params=None,config=None,prefetch=False,verify=True,cert=None)
requests.Session.__enter__(self)
requests.Session.__exit__(self,*args)
requests.Session.__getstate__(self)
requests.Session.__repr__(self)
requests.Session.__setstate__(self,state)
requests.Session.delete(self,url,**kwargs)
requests.Session.get(self,url,**kwargs)
requests.Session.head(self,url,**kwargs)
requests.Session.init_poolmanager(self)
requests.Session.options(self,url,**kwargs)
requests.Session.patch(self,url,data=None,**kwargs)
requests.Session.post(self,url,data=None,**kwargs)
requests.Session.put(self,url,data=None,**kwargs)
requests.Session.request(self,method,url,params=None,data=None,headers=None,cookies=None,files=None,auth=None,timeout=None,allow_redirects=True,proxies=None,hooks=None,return_response=True,config=None,prefetch=False,verify=None,cert=None)
requests.session(**kwargs)
requests.sessions.Session(self,headers=None,cookies=None,auth=None,timeout=None,proxies=None,hooks=None,params=None,config=None,prefetch=False,verify=True,cert=None)
requests.sessions.Session.__enter__(self)
requests.sessions.Session.__exit__(self,*args)
requests.sessions.Session.__getstate__(self)
requests.sessions.Session.__init__(self,headers=None,cookies=None,auth=None,timeout=None,proxies=None,hooks=None,params=None,config=None,prefetch=False,verify=True,cert=None)
requests.sessions.Session.__repr__(self)
requests.sessions.Session.__setstate__(self,state)
requests.sessions.Session.delete(self,url,**kwargs)
requests.sessions.Session.get(self,url,**kwargs)
requests.sessions.Session.head(self,url,**kwargs)
requests.sessions.Session.init_poolmanager(self)
requests.sessions.Session.options(self,url,**kwargs)
requests.sessions.Session.patch(self,url,data=None,**kwargs)
requests.sessions.Session.post(self,url,data=None,**kwargs)
requests.sessions.Session.put(self,url,data=None,**kwargs)
requests.sessions.Session.request(self,method,url,params=None,data=None,headers=None,cookies=None,files=None,auth=None,timeout=None,allow_redirects=True,proxies=None,hooks=None,return_response=True,config=None,prefetch=False,verify=None,cert=None)
requests.sessions.merge_kwargs(local_kwarg,default_kwarg)
requests.sessions.session(**kwargs)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/exceptions.py----------------------------------------
requests.ConnectionError(RequestException)
requests.HTTPError(RequestException)
requests.RequestException(RuntimeError)
requests.Timeout(RequestException)
requests.TooManyRedirects(RequestException)
requests.URLRequired(RequestException)
requests.exceptions.ConnectionError(RequestException)
requests.exceptions.HTTPError(RequestException)
requests.exceptions.InvalidSchema(RequestException,ValueError)
requests.exceptions.InvalidURL(RequestException,ValueError)
requests.exceptions.MissingSchema(RequestException,ValueError)
requests.exceptions.RequestException(RuntimeError)
requests.exceptions.SSLError(ConnectionError)
requests.exceptions.Timeout(RequestException)
requests.exceptions.TooManyRedirects(RequestException)
requests.exceptions.URLRequired(RequestException)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/api.py----------------------------------------
requests.api.delete(url,**kwargs)
requests.api.get(url,**kwargs)
requests.api.head(url,**kwargs)
requests.api.options(url,**kwargs)
requests.api.patch(url,data=None,**kwargs)
requests.api.post(url,data=None,**kwargs)
requests.api.put(url,data=None,**kwargs)
requests.api.request(method,url,**kwargs)
requests.delete(url,**kwargs)
requests.get(url,**kwargs)
requests.head(url,**kwargs)
requests.options(url,**kwargs)
requests.patch(url,data=None,**kwargs)
requests.post(url,data=None,**kwargs)
requests.put(url,data=None,**kwargs)
requests.request(method,url,**kwargs)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/models.py----------------------------------------
A:requests.models.self.config->dict(config or [])
A:requests.models.self.headers->CaseInsensitiveDict()
A:requests.models.self.proxies->dict(proxies or [])
A:requests.models.(self.data, self._enc_data)->self._encode_params(data)
A:requests.models.(self.params, self._enc_params)->self._encode_params(params)
A:requests.models.(self.files, self._enc_files)->self._encode_files(files)
A:requests.models.self.response->dispatch_hook('response', self.hooks, self.response)
A:requests.models.self.cookies->dict(cookies or [])
A:requests.models.headers->CaseInsensitiveDict()
A:requests.models.response->Response()
A:requests.models.response.status_code->getattr(resp, 'status', None)
A:requests.models.response.headers->CaseInsensitiveDict(getattr(resp, 'headers', None))
A:requests.models.response.encoding->get_encoding_from_headers(response.headers)
A:requests.models.cookies->dict_from_string(cookie_header)
A:requests.models.response.error->getattr(resp, 'error', None)
A:requests.models.response.url->self.full_url.decode('utf-8')
A:requests.models.r->dispatch_hook('post_request', self.hooks, self)
A:requests.models.parsed_rurl->urlparse(r.url)
A:requests.models.url->requote_uri(url)
A:requests.models.request->Request(url=url, headers=headers, files=self.files, method=method, params=self.session.params, auth=self.auth, cookies=self.cookies, redirect=True, data=data, config=self.config, timeout=self.timeout, _poolmanager=self._poolmanager, proxies=self.proxies, verify=self.verify, session=self.session, cert=self.cert)
A:requests.models.data->dict(data)
A:requests.models.fields->dict(self.data)
A:requests.models.(body, content_type)->encode_multipart_formdata(fields)
A:requests.models.(scheme, netloc, path, params, query, fragment)->urlparse(url)
A:requests.models.netloc->netloc.encode('utf-8').encode('utf-8')
A:requests.models.scheme->scheme.encode('utf-8').encode('utf-8')
A:requests.models.path->path.encode('utf-8').encode('utf-8')
A:requests.models.params->params.encode('utf-8').encode('utf-8')
A:requests.models.query->query.encode('utf-8').encode('utf-8')
A:requests.models.fragment->fragment.encode('utf-8').encode('utf-8')
A:requests.models.p->urlsplit(self.full_url)
A:requests.models.self.auth->HTTPBasicAuth(*self.auth)
A:requests.models._p->urlparse(url)
A:requests.models.proxy->self.proxies.get(_p.scheme)
A:requests.models.conn->packages.urllib3.connectionpool.connection_from_url(url)
A:requests.models._proxy->urlparse(proxy)
A:requests.models.(auth, url)->urlparse(proxy).netloc.split('@', 1)
A:requests.models.self.proxy_auth->HTTPProxyAuth(*auth.split(':', 1))
A:requests.models.cert_loc->os.environ.get('CURL_CA_BUNDLE')
A:requests.models.c->SimpleCookie()
A:requests.models.cookie_header->SimpleCookie().output(header='', sep='; ').strip()
A:requests.models.chunk->self.raw.read(chunk_size)
A:requests.models.gen->stream_decode_response_unicode(gen, self)
A:requests.models.lines->self.raw.read(chunk_size).splitlines()
A:requests.models.pending->self.raw.read(chunk_size).splitlines().pop()
A:requests.models.encoding->self._detected_encoding()
A:requests.models.content->str(self.content, errors='replace')
A:requests.models.http_error->HTTPError('%s Server Error' % self.status_code)
requests.Request(self,url=None,headers=dict(),files=None,method=None,data=dict(),params=dict(),auth=None,cookies=None,timeout=None,redirect=False,allow_redirects=False,proxies=None,hooks=None,config=None,prefetch=False,_poolmanager=None,verify=None,session=None,cert=None)
requests.Request.__repr__(self)
requests.Request._build_response(self,resp)
requests.Request._encode_files(self,files)
requests.Request._encode_params(data)
requests.Request.deregister_hook(self,event,hook)
requests.Request.full_url(self)
requests.Request.path_url(self)
requests.Request.register_hook(self,event,hook)
requests.Request.send(self,anyway=False,prefetch=False)
requests.Response(self)
requests.Response.__bool__(self)
requests.Response.__nonzero__(self)
requests.Response.__repr__(self)
requests.Response._detected_encoding(self)
requests.Response.content(self)
requests.Response.iter_content(self,chunk_size=1,decode_unicode=False)
requests.Response.iter_lines(self,chunk_size=10*1024,decode_unicode=None)
requests.Response.ok(self)
requests.Response.raise_for_status(self,allow_redirects=True)
requests.Response.text(self)
requests.models.Request(self,url=None,headers=dict(),files=None,method=None,data=dict(),params=dict(),auth=None,cookies=None,timeout=None,redirect=False,allow_redirects=False,proxies=None,hooks=None,config=None,prefetch=False,_poolmanager=None,verify=None,session=None,cert=None)
requests.models.Request.__init__(self,url=None,headers=dict(),files=None,method=None,data=dict(),params=dict(),auth=None,cookies=None,timeout=None,redirect=False,allow_redirects=False,proxies=None,hooks=None,config=None,prefetch=False,_poolmanager=None,verify=None,session=None,cert=None)
requests.models.Request.__repr__(self)
requests.models.Request._build_response(self,resp)
requests.models.Request._encode_files(self,files)
requests.models.Request._encode_params(data)
requests.models.Request.deregister_hook(self,event,hook)
requests.models.Request.full_url(self)
requests.models.Request.path_url(self)
requests.models.Request.register_hook(self,event,hook)
requests.models.Request.send(self,anyway=False,prefetch=False)
requests.models.Response(self)
requests.models.Response.__bool__(self)
requests.models.Response.__init__(self)
requests.models.Response.__nonzero__(self)
requests.models.Response.__repr__(self)
requests.models.Response._detected_encoding(self)
requests.models.Response.content(self)
requests.models.Response.iter_content(self,chunk_size=1,decode_unicode=False)
requests.models.Response.iter_lines(self,chunk_size=10*1024,decode_unicode=None)
requests.models.Response.ok(self)
requests.models.Response.raise_for_status(self,allow_redirects=True)
requests.models.Response.text(self)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/auth.py----------------------------------------
A:requests.auth.r.headers['Authorization']->_basic_auth_str(self.username, self.password)
A:requests.auth.r.headers['Proxy-Authorization']->_basic_auth_str(self.username, self.password)
A:requests.auth.s_auth->r.headers.get('www-authenticate', '')
A:requests.auth.chal->parse_dict_header(s_auth.replace('Digest ', ''))
A:requests.auth.qop->parse_dict_header(s_auth.replace('Digest ', '')).get('qop')
A:requests.auth.algorithm->algorithm.upper().upper()
A:requests.auth.opaque->parse_dict_header(s_auth.replace('Digest ', '')).get('opaque', None)
A:requests.auth.x->x.encode('utf-8').encode('utf-8')
A:requests.auth.p_parsed->urlparse(r.request.url)
A:requests.auth.s->str(nonce_count).encode('utf-8')
A:requests.auth.respdig->KD(hash_utf8(A1), '%s:%s' % (nonce, hash_utf8(A2)))
requests.auth.AuthBase(self,r)
requests.auth.AuthBase.__call__(self,r)
requests.auth.HTTPBasicAuth(self,username,password)
requests.auth.HTTPBasicAuth.__init__(self,username,password)
requests.auth.HTTPDigestAuth(self,username,password)
requests.auth.HTTPDigestAuth.__init__(self,username,password)
requests.auth.HTTPDigestAuth.handle_401(self,r)
requests.auth.HTTPProxyAuth(self,r)
requests.auth.HTTPProxyAuth.__call__(self,r)
requests.auth._basic_auth_str(username,password)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/compat.py----------------------------------------
A:requests.compat._ver->sys.version.lower()


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/status_codes.py----------------------------------------
A:requests.status_codes.codes->LookupDict(name='status_codes')


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/async.py----------------------------------------
A:requests.async.config->kwargs.get('config', {})
A:requests.async.get->patched(api.get)
A:requests.async.options->patched(api.options)
A:requests.async.head->patched(api.head)
A:requests.async.post->patched(api.post)
A:requests.async.put->patched(api.put)
A:requests.async.patch->patched(api.patch)
A:requests.async.delete->patched(api.delete)
A:requests.async.request->patched(api.request)
A:requests.async.requests->list(requests)
A:requests.async.pool->Pool(size)
requests.async.imap(requests,prefetch=True,size=2)
requests.async.map(requests,prefetch=True,size=None)
requests.async.patched(f)
requests.async.send(r,pool=None,prefetch=False)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/hooks.py----------------------------------------
A:requests.hooks.hooks->hooks.get(key).get(key)
requests.hooks.dispatch_hook(key,hooks,hook_data)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/oreos/structures.py----------------------------------------
A:requests.packages.oreos.structures._missing->_Missing()
A:requests.packages.oreos.structures.rv->dict.__getitem__(self, key)
A:requests.packages.oreos.structures.value->list(value)
A:requests.packages.oreos.structures.default_list->dict.__getitem__(self, key)
A:requests.packages.oreos.structures.item->dict.popitem(self)
requests.packages.oreos.structures.MultiDict(self,mapping=None)
requests.packages.oreos.structures.MultiDict.__copy__(self)
requests.packages.oreos.structures.MultiDict.__getitem__(self,key)
requests.packages.oreos.structures.MultiDict.__getstate__(self)
requests.packages.oreos.structures.MultiDict.__init__(self,mapping=None)
requests.packages.oreos.structures.MultiDict.__iter__(self)
requests.packages.oreos.structures.MultiDict.__repr__(self)
requests.packages.oreos.structures.MultiDict.__setitem__(self,key,value)
requests.packages.oreos.structures.MultiDict.__setstate__(self,value)
requests.packages.oreos.structures.MultiDict.add(self,key,value)
requests.packages.oreos.structures.MultiDict.copy(self)
requests.packages.oreos.structures.MultiDict.getlist(self,key,type=None)
requests.packages.oreos.structures.MultiDict.items(self,multi=False)
requests.packages.oreos.structures.MultiDict.iteritems(self,multi=False)
requests.packages.oreos.structures.MultiDict.iterlists(self)
requests.packages.oreos.structures.MultiDict.iterlistvalues(self)
requests.packages.oreos.structures.MultiDict.itervalues(self)
requests.packages.oreos.structures.MultiDict.lists(self)
requests.packages.oreos.structures.MultiDict.listvalues(self)
requests.packages.oreos.structures.MultiDict.pop(self,key,default=_missing)
requests.packages.oreos.structures.MultiDict.popitem(self)
requests.packages.oreos.structures.MultiDict.popitemlist(self)
requests.packages.oreos.structures.MultiDict.poplist(self,key)
requests.packages.oreos.structures.MultiDict.setdefault(self,key,default=None)
requests.packages.oreos.structures.MultiDict.setlist(self,key,new_list)
requests.packages.oreos.structures.MultiDict.setlistdefault(self,key,default_list=None)
requests.packages.oreos.structures.MultiDict.to_dict(self,flat=True)
requests.packages.oreos.structures.MultiDict.update(self,other_dict)
requests.packages.oreos.structures.MultiDict.values(self)
requests.packages.oreos.structures.TypeConversionDict(dict)
requests.packages.oreos.structures.TypeConversionDict.get(self,key,default=None,type=None)
requests.packages.oreos.structures._Missing(object)
requests.packages.oreos.structures._Missing.__reduce__(self)
requests.packages.oreos.structures._Missing.__repr__(self)
requests.packages.oreos.structures.iter_multi_items(mapping)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/oreos/monkeys.py----------------------------------------
A:requests.packages.oreos.monkeys._idmap->''.join((chr(x) for x in range(256)))
A:requests.packages.oreos.monkeys._OctalPatt->re.compile('\\\\[0-3][0-7][0-7]')
A:requests.packages.oreos.monkeys._QuotePatt->re.compile('[\\\\].')
A:requests.packages.oreos.monkeys.n->len(str)
A:requests.packages.oreos.monkeys.Omatch->re.compile('\\\\[0-3][0-7][0-7]').search(str, i)
A:requests.packages.oreos.monkeys.Qmatch->re.compile('[\\\\].').search(str, i)
A:requests.packages.oreos.monkeys.j->re.compile('\\\\[0-3][0-7][0-7]').search(str, i).start(0)
A:requests.packages.oreos.monkeys.k->re.compile('[\\\\].').search(str, i).start(0)
A:requests.packages.oreos.monkeys.now->time()
A:requests.packages.oreos.monkeys.(year, month, day, hh, mm, ss, wd, y, z)->gmtime(now + future)
A:requests.packages.oreos.monkeys.K->K.lower().lower()
A:requests.packages.oreos.monkeys.items->self.items()
A:requests.packages.oreos.monkeys._CookiePattern->re.compile('(?x)(?P<key>' + _LegalCharsPatt + '+?)\\s*=\\s*(?P<val>"(?:[^\\\\"]|\\\\.)*"|\\w{3},\\s[\\w\\d-]{9,11}\\s[\\d:]{8}\\sGMT|' + _LegalCharsPatt + '*)\\s*;?')
A:requests.packages.oreos.monkeys.strval->_unquote(val)
A:requests.packages.oreos.monkeys.M->self.get(key, Morsel())
A:requests.packages.oreos.monkeys.(rval, cval)->self.value_decode(V)
A:requests.packages.oreos.monkeys.match->patt.search(str, i)
A:requests.packages.oreos.monkeys.i->patt.search(str, i).end(0)
A:requests.packages.oreos.monkeys.M[K]->_unquote(V)
requests.packages.oreos.monkeys.BaseCookie(self,input=None)
requests.packages.oreos.monkeys.BaseCookie.__ParseString(self,str,patt=_CookiePattern)
requests.packages.oreos.monkeys.BaseCookie.__init__(self,input=None)
requests.packages.oreos.monkeys.BaseCookie.__repr__(self)
requests.packages.oreos.monkeys.BaseCookie.__set(self,key,real_value,coded_value)
requests.packages.oreos.monkeys.BaseCookie.__setitem__(self,key,value)
requests.packages.oreos.monkeys.BaseCookie.js_output(self,attrs=None)
requests.packages.oreos.monkeys.BaseCookie.load(self,rawdata)
requests.packages.oreos.monkeys.BaseCookie.output(self,attrs=None,header='Set-Cookie:',sep='\r\n')
requests.packages.oreos.monkeys.BaseCookie.value_decode(self,val)
requests.packages.oreos.monkeys.BaseCookie.value_encode(self,val)
requests.packages.oreos.monkeys.CookieError(Exception)
requests.packages.oreos.monkeys.Morsel(self)
requests.packages.oreos.monkeys.Morsel.OutputString(self,attrs=None)
requests.packages.oreos.monkeys.Morsel.__init__(self)
requests.packages.oreos.monkeys.Morsel.__repr__(self)
requests.packages.oreos.monkeys.Morsel.__setitem__(self,K,V)
requests.packages.oreos.monkeys.Morsel.isReservedKey(self,K)
requests.packages.oreos.monkeys.Morsel.js_output(self,attrs=None)
requests.packages.oreos.monkeys.Morsel.output(self,attrs=None,header='Set-Cookie:')
requests.packages.oreos.monkeys.Morsel.set(self,key,val,coded_val,LegalChars=_LegalChars,idmap=_idmap,translate=string.translate)
requests.packages.oreos.monkeys.SerialCookie(self,input=None)
requests.packages.oreos.monkeys.SerialCookie.__init__(self,input=None)
requests.packages.oreos.monkeys.SerialCookie.value_decode(self,val)
requests.packages.oreos.monkeys.SerialCookie.value_encode(self,val)
requests.packages.oreos.monkeys.SimpleCookie(BaseCookie)
requests.packages.oreos.monkeys.SimpleCookie.value_decode(self,val)
requests.packages.oreos.monkeys.SimpleCookie.value_encode(self,val)
requests.packages.oreos.monkeys.SmartCookie(self,input=None)
requests.packages.oreos.monkeys.SmartCookie.__init__(self,input=None)
requests.packages.oreos.monkeys.SmartCookie.value_decode(self,val)
requests.packages.oreos.monkeys.SmartCookie.value_encode(self,val)
requests.packages.oreos.monkeys._getdate(future=0,weekdayname=_weekdayname,monthname=_monthname)
requests.packages.oreos.monkeys._quote(str,LegalChars=_LegalChars,idmap=_idmap,translate=string.translate)
requests.packages.oreos.monkeys._test()
requests.packages.oreos.monkeys._unquote(str)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/oreos/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/oreos/core.py----------------------------------------
A:requests.packages.oreos.core.cookies->dict()
A:requests.packages.oreos.core.c->SimpleCookie()
requests.packages.oreos.core.dict_from_string(s)
requests.packages.oreos.dict_from_string(s)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/exceptions.py----------------------------------------
requests.packages.urllib3.HTTPError(Exception)
requests.packages.urllib3.TimeoutError(PoolError)
requests.packages.urllib3.exceptions.EmptyPoolError(PoolError)
requests.packages.urllib3.exceptions.HTTPError(Exception)
requests.packages.urllib3.exceptions.HostChangedError(self,pool,url,retries=3)
requests.packages.urllib3.exceptions.HostChangedError.__init__(self,pool,url,retries=3)
requests.packages.urllib3.exceptions.LocationParseError(self,location)
requests.packages.urllib3.exceptions.LocationParseError.__init__(self,location)
requests.packages.urllib3.exceptions.MaxRetryError(self,pool,url)
requests.packages.urllib3.exceptions.MaxRetryError.__init__(self,pool,url)
requests.packages.urllib3.exceptions.PoolError(self,pool,message)
requests.packages.urllib3.exceptions.PoolError.__init__(self,pool,message)
requests.packages.urllib3.exceptions.SSLError(HTTPError)
requests.packages.urllib3.exceptions.TimeoutError(PoolError)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/poolmanager.py----------------------------------------
A:requests.packages.urllib3.poolmanager.log->logging.getLogger(__name__)
A:requests.packages.urllib3.poolmanager.self.pools->RecentlyUsedContainer(num_pools)
A:requests.packages.urllib3.poolmanager.pool->pool_cls(host, port, **self.connection_pool_kw)
A:requests.packages.urllib3.poolmanager.(scheme, host, port)->get_host(url)
A:requests.packages.urllib3.poolmanager.conn->self.connection_from_url(url)
A:requests.packages.urllib3.poolmanager.kw['headers']->self._set_proxy_headers(kw.get('headers'))
A:requests.packages.urllib3.poolmanager.proxy_pool->connection_from_url(url, **pool_kw)
requests.packages.urllib3.PoolManager(self,num_pools=10,**connection_pool_kw)
requests.packages.urllib3.PoolManager.connection_from_host(self,host,port=80,scheme='http')
requests.packages.urllib3.PoolManager.connection_from_url(self,url)
requests.packages.urllib3.PoolManager.urlopen(self,method,url,**kw)
requests.packages.urllib3.ProxyManager(self,proxy_pool)
requests.packages.urllib3.ProxyManager._set_proxy_headers(self,headers=None)
requests.packages.urllib3.ProxyManager.urlopen(self,method,url,**kw)
requests.packages.urllib3.poolmanager.PoolManager(self,num_pools=10,**connection_pool_kw)
requests.packages.urllib3.poolmanager.PoolManager.__init__(self,num_pools=10,**connection_pool_kw)
requests.packages.urllib3.poolmanager.PoolManager.connection_from_host(self,host,port=80,scheme='http')
requests.packages.urllib3.poolmanager.PoolManager.connection_from_url(self,url)
requests.packages.urllib3.poolmanager.PoolManager.urlopen(self,method,url,**kw)
requests.packages.urllib3.poolmanager.ProxyManager(self,proxy_pool)
requests.packages.urllib3.poolmanager.ProxyManager.__init__(self,proxy_pool)
requests.packages.urllib3.poolmanager.ProxyManager._set_proxy_headers(self,headers=None)
requests.packages.urllib3.poolmanager.ProxyManager.urlopen(self,method,url,**kw)
requests.packages.urllib3.poolmanager.proxy_from_url(url,**pool_kw)
requests.packages.urllib3.proxy_from_url(url,**pool_kw)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/filepost.py----------------------------------------
A:requests.packages.urllib3.filepost.body->BytesIO()
A:requests.packages.urllib3.filepost.boundary->choose_boundary()
A:requests.packages.urllib3.filepost.data->str(data)
A:requests.packages.urllib3.filepost.content_type->b('multipart/form-data; boundary=%s' % boundary)
requests.packages.urllib3.encode_multipart_formdata(fields,boundary=None)
requests.packages.urllib3.filepost.encode_multipart_formdata(fields,boundary=None)
requests.packages.urllib3.filepost.get_content_type(filename)
requests.packages.urllib3.filepost.iter_fields(fields)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/connectionpool.py----------------------------------------
A:requests.packages.urllib3.connectionpool.log->logging.getLogger(__name__)
A:requests.packages.urllib3.connectionpool._Default->object()
A:requests.packages.urllib3.connectionpool.sock->getattr(conn, 'sock', False)
A:requests.packages.urllib3.connectionpool.self.sock->ssl.wrap_socket(sock, self.key_file, self.cert_file, cert_reqs=self.cert_reqs, ca_certs=self.ca_certs)
A:requests.packages.urllib3.connectionpool.self.pool->self.QueueCls(maxsize)
A:requests.packages.urllib3.connectionpool.conn->self._get_conn(timeout=pool_timeout)
A:requests.packages.urllib3.connectionpool.httplib_response->self._make_request(conn, method, url, timeout=timeout, body=body, headers=headers)
A:requests.packages.urllib3.connectionpool.(scheme, host, port)->get_host(url)
A:requests.packages.urllib3.connectionpool.port->port_by_scheme.get(scheme)
A:requests.packages.urllib3.connectionpool.release_conn->response_kw.get('preload_content', True)
A:requests.packages.urllib3.connectionpool.response->response.HTTPResponse.from_httplib(httplib_response, pool=self, connection=response_conn, **response_kw)
A:requests.packages.urllib3.connectionpool.connection->VerifiedHTTPSConnection(host=self.host, port=self.port)
requests.packages.urllib3.HTTPConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None)
requests.packages.urllib3.HTTPConnectionPool._get_conn(self,timeout=None)
requests.packages.urllib3.HTTPConnectionPool._make_request(self,conn,method,url,timeout=_Default,**httplib_request_kw)
requests.packages.urllib3.HTTPConnectionPool._new_conn(self)
requests.packages.urllib3.HTTPConnectionPool._put_conn(self,conn)
requests.packages.urllib3.HTTPConnectionPool.is_same_host(self,url)
requests.packages.urllib3.HTTPConnectionPool.urlopen(self,method,url,body=None,headers=None,retries=3,redirect=True,assert_same_host=True,timeout=_Default,pool_timeout=None,release_conn=None,**response_kw)
requests.packages.urllib3.HTTPSConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.HTTPSConnectionPool._new_conn(self)
requests.packages.urllib3.connection_from_url(url,**kw)
requests.packages.urllib3.connectionpool.ConnectionPool(self,host,port=None)
requests.packages.urllib3.connectionpool.ConnectionPool.__init__(self,host,port=None)
requests.packages.urllib3.connectionpool.ConnectionPool.__str__(self)
requests.packages.urllib3.connectionpool.HTTPConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.__init__(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._get_conn(self,timeout=None)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._make_request(self,conn,method,url,timeout=_Default,**httplib_request_kw)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._new_conn(self)
requests.packages.urllib3.connectionpool.HTTPConnectionPool._put_conn(self,conn)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.is_same_host(self,url)
requests.packages.urllib3.connectionpool.HTTPConnectionPool.urlopen(self,method,url,body=None,headers=None,retries=3,redirect=True,assert_same_host=True,timeout=_Default,pool_timeout=None,release_conn=None,**response_kw)
requests.packages.urllib3.connectionpool.HTTPSConnectionPool(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.connectionpool.HTTPSConnectionPool.__init__(self,host,port=None,strict=False,timeout=None,maxsize=1,block=False,headers=None,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.connectionpool.HTTPSConnectionPool._new_conn(self)
requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection(HTTPSConnection)
requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection.connect(self)
requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection.set_cert(self,key_file=None,cert_file=None,cert_reqs='CERT_NONE',ca_certs=None)
requests.packages.urllib3.connectionpool.connection_from_url(url,**kw)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/_collections.py----------------------------------------
A:requests.packages.urllib3._collections.self.access_log->deque((e for e in self.access_log if e.is_valid))
A:requests.packages.urllib3._collections.self.access_log_lock->RLock()
A:requests.packages.urllib3._collections.old_entry->self.access_lookup.get(key)
A:requests.packages.urllib3._collections.new_entry->AccessEntry(key)
A:requests.packages.urllib3._collections.p->self.access_log.pop()
A:requests.packages.urllib3._collections.item->dict.get(self, key)
requests.packages.urllib3._collections.AccessEntry(self,key,is_valid=True)
requests.packages.urllib3._collections.AccessEntry.__init__(self,key,is_valid=True)
requests.packages.urllib3._collections.RecentlyUsedContainer(self,maxsize=10)
requests.packages.urllib3._collections.RecentlyUsedContainer.__delitem__(self,key)
requests.packages.urllib3._collections.RecentlyUsedContainer.__getitem__(self,key)
requests.packages.urllib3._collections.RecentlyUsedContainer.__init__(self,maxsize=10)
requests.packages.urllib3._collections.RecentlyUsedContainer.__setitem__(self,key,item)
requests.packages.urllib3._collections.RecentlyUsedContainer._get_ordered_access_keys(self)
requests.packages.urllib3._collections.RecentlyUsedContainer._invalidate_entry(self,key)
requests.packages.urllib3._collections.RecentlyUsedContainer._prune_entries(self,num)
requests.packages.urllib3._collections.RecentlyUsedContainer._prune_invalidated_entries(self)
requests.packages.urllib3._collections.RecentlyUsedContainer._push_entry(self,key)
requests.packages.urllib3._collections.RecentlyUsedContainer.get(self,key,default=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/request.py----------------------------------------
A:requests.packages.urllib3.request._encode_url_methods->set(['DELETE', 'GET', 'HEAD', 'OPTIONS'])
A:requests.packages.urllib3.request._encode_body_methods->set(['PATCH', 'POST', 'PUT', 'TRACE'])
A:requests.packages.urllib3.request.method->method.upper().upper()
A:requests.packages.urllib3.request.(body, content_type)->encode_multipart_formdata(fields or {}, boundary=multipart_boundary)
requests.packages.urllib3.request.RequestMethods(object)
requests.packages.urllib3.request.RequestMethods.request(self,method,url,fields=None,headers=None,**urlopen_kw)
requests.packages.urllib3.request.RequestMethods.request_encode_body(self,method,url,fields=None,headers=None,encode_multipart=True,multipart_boundary=None,**urlopen_kw)
requests.packages.urllib3.request.RequestMethods.request_encode_url(self,method,url,fields=None,**urlopen_kw)
requests.packages.urllib3.request.RequestMethods.urlopen(self,method,url,body=None,headers=None,encode_multipart=True,multipart_boundary=None,**kw)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/response.py----------------------------------------
A:requests.packages.urllib3.response.log->logging.getLogger(__name__)
A:requests.packages.urllib3.response.gzipper->gzip.GzipFile(fileobj=BytesIO(data))
A:requests.packages.urllib3.response.self._body->self.read(decode_content=decode_content)
A:requests.packages.urllib3.response.content_encoding->self.headers.get('content-encoding')
A:requests.packages.urllib3.response.decoder->self.CONTENT_DECODERS.get(content_encoding)
A:requests.packages.urllib3.response.data->decoder(data)
A:requests.packages.urllib3.response.k->k.lower().lower()
A:requests.packages.urllib3.response.has_value->headers.get(k)
A:requests.packages.urllib3.response.v->', '.join([has_value, v])
A:requests.packages.urllib3.response.strict->getattr(r, 'strict', 0)
requests.packages.urllib3.HTTPResponse(self,body='',headers=None,status=0,version=0,reason=None,strict=0,preload_content=True,decode_content=True,original_response=None,pool=None,connection=None)
requests.packages.urllib3.HTTPResponse.data(self)
requests.packages.urllib3.HTTPResponse.from_httplib(ResponseCls,r,**response_kw)
requests.packages.urllib3.HTTPResponse.get_redirect_location(self)
requests.packages.urllib3.HTTPResponse.getheader(self,name,default=None)
requests.packages.urllib3.HTTPResponse.getheaders(self)
requests.packages.urllib3.HTTPResponse.read(self,amt=None,decode_content=None,cache_content=False)
requests.packages.urllib3.HTTPResponse.release_conn(self)
requests.packages.urllib3.response.HTTPResponse(self,body='',headers=None,status=0,version=0,reason=None,strict=0,preload_content=True,decode_content=True,original_response=None,pool=None,connection=None)
requests.packages.urllib3.response.HTTPResponse.__init__(self,body='',headers=None,status=0,version=0,reason=None,strict=0,preload_content=True,decode_content=True,original_response=None,pool=None,connection=None)
requests.packages.urllib3.response.HTTPResponse.data(self)
requests.packages.urllib3.response.HTTPResponse.from_httplib(ResponseCls,r,**response_kw)
requests.packages.urllib3.response.HTTPResponse.get_redirect_location(self)
requests.packages.urllib3.response.HTTPResponse.getheader(self,name,default=None)
requests.packages.urllib3.response.HTTPResponse.getheaders(self)
requests.packages.urllib3.response.HTTPResponse.read(self,amt=None,decode_content=None,cache_content=False)
requests.packages.urllib3.response.HTTPResponse.release_conn(self)
requests.packages.urllib3.response.decode_deflate(data)
requests.packages.urllib3.response.decode_gzip(data)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/util.py----------------------------------------
A:requests.packages.urllib3.util.accept_encoding->','.join(accept_encoding)
A:requests.packages.urllib3.util.(scheme, url)->url.split('://', 1)
A:requests.packages.urllib3.util.(url, _path)->url.split('/', 1)
A:requests.packages.urllib3.util.(_auth, url)->url.split('@', 1)
A:requests.packages.urllib3.util.(url, port)->url.split(':', 1)
A:requests.packages.urllib3.util.port->int(port)
A:requests.packages.urllib3.util.sock->getattr(conn, 'sock', False)
A:requests.packages.urllib3.util.p->poll()
requests.packages.urllib3.get_host(url)
requests.packages.urllib3.make_headers(keep_alive=None,accept_encoding=None,user_agent=None,basic_auth=None)
requests.packages.urllib3.util.get_host(url)
requests.packages.urllib3.util.is_connection_dropped(conn)
requests.packages.urllib3.util.make_headers(keep_alive=None,accept_encoding=None,user_agent=None,basic_auth=None)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/packages/__init__.py----------------------------------------


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/packages/six.py----------------------------------------
A:requests.packages.urllib3.packages.six.MAXSIZE->int((1 << 63) - 1)
A:requests.packages.urllib3.packages.six.result->self._resolve()
A:requests.packages.urllib3.packages.six.module->_import_module(self.mod)
A:requests.packages.urllib3.packages.six.movessys.modules['six.moves']->_MovedItems('moves')
A:requests.packages.urllib3.packages.six.get_method_function->operator.attrgetter(_meth_func)
A:requests.packages.urllib3.packages.six.get_method_self->operator.attrgetter(_meth_self)
A:requests.packages.urllib3.packages.six.get_function_code->operator.attrgetter(_func_code)
A:requests.packages.urllib3.packages.six.get_function_defaults->operator.attrgetter(_func_defaults)
A:requests.packages.urllib3.packages.six.int2byte->operator.methodcaller('to_bytes', 1, 'big')
A:requests.packages.urllib3.packages.six.exec_->getattr(builtins, 'exec')
A:requests.packages.urllib3.packages.six.print_->getattr(builtins, 'print')
A:requests.packages.urllib3.packages.six.frame->sys._getframe(1)
A:requests.packages.urllib3.packages.six.fp->kwargs.pop('file', sys.stdout)
A:requests.packages.urllib3.packages.six.data->str(data)
A:requests.packages.urllib3.packages.six.sep->kwargs.pop('sep', None)
A:requests.packages.urllib3.packages.six.end->kwargs.pop('end', None)
A:requests.packages.urllib3.packages.six.newline->unicode('\n')
A:requests.packages.urllib3.packages.six.space->unicode(' ')
requests.packages.urllib3.packages.six.MovedAttribute(self,name,old_mod,new_mod,old_attr=None,new_attr=None)
requests.packages.urllib3.packages.six.MovedAttribute.__init__(self,name,old_mod,new_mod,old_attr=None,new_attr=None)
requests.packages.urllib3.packages.six.MovedAttribute._resolve(self)
requests.packages.urllib3.packages.six.MovedModule(self,name,old,new=None)
requests.packages.urllib3.packages.six.MovedModule.__init__(self,name,old,new=None)
requests.packages.urllib3.packages.six.MovedModule._resolve(self)
requests.packages.urllib3.packages.six._LazyDescr(self,name)
requests.packages.urllib3.packages.six._LazyDescr.__get__(self,obj,tp)
requests.packages.urllib3.packages.six._LazyDescr.__init__(self,name)
requests.packages.urllib3.packages.six._MovedItems(types.ModuleType)
requests.packages.urllib3.packages.six._add_doc(func,doc)
requests.packages.urllib3.packages.six._import_module(name)
requests.packages.urllib3.packages.six.add_move(move)
requests.packages.urllib3.packages.six.iteritems(d)
requests.packages.urllib3.packages.six.iterkeys(d)
requests.packages.urllib3.packages.six.itervalues(d)
requests.packages.urllib3.packages.six.remove_move(name)
requests.packages.urllib3.packages.six.with_metaclass(meta,base=object)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py----------------------------------------
A:requests.packages.urllib3.packages.ssl_match_hostname.__init__.frag->re.escape(frag)
A:requests.packages.urllib3.packages.ssl_match_hostname.__init__.san->cert.get('subjectAltName', ())
requests.packages.urllib3.packages.ssl_match_hostname.__init__.CertificateError(ValueError)
requests.packages.urllib3.packages.ssl_match_hostname.__init__._dnsname_to_pat(dn)
requests.packages.urllib3.packages.ssl_match_hostname.__init__.match_hostname(cert,hostname)


----------------------------------------/dataset/nuaa/anaconda3/envs/requests0.11.2/lib/python3.6/site-packages/requests/packages/urllib3/packages/mimetools_choose_boundary/__init__.py----------------------------------------
A:requests.packages.urllib3.packages.mimetools_choose_boundary.__init__._counter_lock->Lock()
A:requests.packages.urllib3.packages.mimetools_choose_boundary.__init__.hostid->socket.gethostbyname(socket.gethostname())
A:requests.packages.urllib3.packages.mimetools_choose_boundary.__init__.uid->repr(os.getuid())
A:requests.packages.urllib3.packages.mimetools_choose_boundary.__init__.pid->repr(os.getpid())
requests.packages.urllib3.packages.mimetools_choose_boundary.__init__._get_next_counter()
requests.packages.urllib3.packages.mimetools_choose_boundary.__init__.choose_boundary()

